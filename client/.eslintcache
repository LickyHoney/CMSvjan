[{"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\index.js":"1","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\serviceWorker.js":"2","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\App.js":"3","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\store.js":"4","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\actions\\authActions.js":"5","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\utils\\setAuthToken.js":"6","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\layout\\Navbar.js":"7","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Map1.js":"8","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\auth\\Register.js":"9","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\auth\\Login.js":"10","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\EditFloormap.js":"11","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\private-route\\PrivateRoute.js":"12","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\FloorMap.js":"13","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\services.js":"14","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\actions\\types.js":"15","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\DisplayEntries.js":"17","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Tabs.js":"18","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\history.js":"19","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\SlickSliderStyle1.js":"20","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\reducers\\index.js":"21","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Tab.js":"22","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\reducers\\errorReducer.js":"23","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\reducers\\authReducer.js":"24"},{"size":463,"mtime":1609618658608,"results":"25","hashOfConfig":"26"},{"size":5083,"mtime":1609618658612,"results":"27","hashOfConfig":"26"},{"size":2640,"mtime":1609624333349,"results":"28","hashOfConfig":"26"},{"size":467,"mtime":1609618658612,"results":"29","hashOfConfig":"26"},{"size":1718,"mtime":1609618657848,"results":"30","hashOfConfig":"26"},{"size":344,"mtime":1609618658613,"results":"31","hashOfConfig":"26"},{"size":1055,"mtime":1609618658605,"results":"32","hashOfConfig":"26"},{"size":9231,"mtime":1609618658465,"results":"33","hashOfConfig":"26"},{"size":5965,"mtime":1609618658451,"results":"34","hashOfConfig":"26"},{"size":5223,"mtime":1609618658449,"results":"35","hashOfConfig":"26"},{"size":8920,"mtime":1609618658459,"results":"36","hashOfConfig":"26"},{"size":617,"mtime":1609618658606,"results":"37","hashOfConfig":"26"},{"size":7305,"mtime":1609618658461,"results":"38","hashOfConfig":"26"},{"size":658,"mtime":1609618658603,"results":"39","hashOfConfig":"26"},{"size":139,"mtime":1609618657849,"results":"40","hashOfConfig":"26"},{"size":1787,"mtime":1609618658455,"results":"41","hashOfConfig":"26"},{"size":5453,"mtime":1609618658457,"results":"42","hashOfConfig":"26"},{"size":1246,"mtime":1609618658476,"results":"43","hashOfConfig":"26"},{"size":86,"mtime":1609618658485,"results":"44","hashOfConfig":"26"},{"size":1672,"mtime":1609618658473,"results":"45","hashOfConfig":"26"},{"size":215,"mtime":1609618658611,"results":"46","hashOfConfig":"26"},{"size":718,"mtime":1609618658475,"results":"47","hashOfConfig":"26"},{"size":260,"mtime":1609618658611,"results":"48","hashOfConfig":"26"},{"size":732,"mtime":1609618658609,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"l9j65h",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\index.js",[],["106","107"],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\serviceWorker.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\App.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\store.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\actions\\authActions.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Map1.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport DisplayEntries from \"./DisplayEntries\"\r\nimport service from \"./services.js\";\r\nimport { CardBody,Card } from 'reactstrap';\r\n\r\nimport { Polygon, Popup, Rectangle, Marker, TileLayer } from \"react-leaflet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Container, Col, Row, PopUp,Button } from \"reactstrap\";\r\nimport {MapContainer } from \"react-leaflet\";\r\n\r\nimport {Nav,NavItem,NavLink,TabContent,TabPane} from 'reactstrap';\r\nimport Tabs from \"./Tabs\";\r\nimport PropTypes from \"prop-types\";\r\nimport DashBoard from \"./Dashboard\";\r\n//import icon from \"./icon_building.png\";\r\nimport { Icon, marker } from \"leaflet\";\r\nimport { SelectionState } from \"@devexpress/dx-react-grid\";\r\n//import EditFloormap from \"./EditFloormap\";\r\nimport history from\"./history\"\r\nconst Map1  = () => {\r\n  \r\n    \r\n\r\n      const [markers, setMarkers] = useState([])\r\n      const [ newLat, setNewLat ] = useState('')\r\n      const [ newLng, setNewLng ] = useState('')\r\n      const [ newName, setNewName ] = useState('')\r\n      const [newFilter, setNewFilter] = useState('')\r\n      const [ buttonVal, setButtonVal ] = useState(\"\")\r\n      \r\n      \r\n      useEffect(()=>{\r\n        service\r\n        .getAll()\r\n        .then(latlng =>{\r\n          console.log(\"returning\", latlng)\r\n          setMarkers(latlng)\r\n        })\r\n      },[])\r\n\r\n\r\n\r\n   \r\n      \r\n\r\n      \r\n      const kids = [\r\n        [60.23296, 24.83034],\r\n        [60.23299, 24.83039],\r\n        [60.23302, 24.83031],\r\n        [60.23299, 24.83026]\r\n        \r\n      ]\r\n      const br = [\r\n        [60.23299, 24.83026],\r\n        [60.23301, 24.83029],\r\n        [60.23303, 24.83024],\r\n        [60.23301, 24.83022]\r\n      ]\r\n      const tv = [\r\n        [60.23301, 24.83030],\r\n        [60.23304, 24.83035],\r\n        [60.23306, 24.83030],\r\n        [60.23303, 24.83025]\r\n      ]\r\n      const wc = [\r\n        [60.23303, 24.83040],\r\n        [60.23304, 24.83042],\r\n        [60.23305, 24.83039],\r\n        [60.23303, 24.83038]\r\n      ]\r\n      \r\n      \r\n\r\n      \r\n      const Corridar = [\r\n        [60.23299, 24.83040],\r\n        [60.23301, 24.83043],\r\n        [60.23303, 24.83037],\r\n        [60.23302, 24.83034],\r\n      ]\r\n      const Kitchen = [\r\n        [60.23304, 24.83035],\r\n        [60.23306, 24.83038],\r\n        [60.23308, 24.83033],\r\n        [60.23306, 24.83030]\r\n      ]\r\n  const changeHandler = (event) => setNewLat(event.target.value)\r\n  const changeHandler1 = (event) => setNewLng(event.target.value)\r\n  const changeHandler2= (event) => setNewName(event.target.value)\r\n  //const changeHandlerFilter = (event) => setNewFilter(event.target.value)\r\n      \r\n  \r\n\r\n        const position = [60.21749913, 24.938379];\r\n        const position1 = [60.21749913, 24.806496774]\r\n        console.log(position)\r\n       \r\n      const submitHandler = (event) => {\r\n        event.preventDefault()\r\n       service\r\n        .getAll()\r\n        .then(latlng =>{\r\n          const allMarkers = [...latlng]\r\n\r\n          const newMarker = {\r\n            id:markers.length + 1,\r\n            lat:parseFloat(newLat),\r\n            lng:parseFloat(newLng),\r\n            name:newName\r\n          }\r\n           service\r\n            .update(newMarker)\r\n            .then(newEntry =>{\r\n                setNewLat(\"\")\r\n                setNewLng(\"\")\r\n                setNewName(\"\")\r\n              setMarkers(latlng.concat(newEntry))\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n\r\nconst [searchTerm, setSearchTerm] = useState(\"\");\r\n //const [searchResults, setSearchResults] = React.useState([]);\r\n  const handleChange = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const results = markers.filter(marker =>\r\n      marker.description.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n    );\r\n    setMarkers(results);\r\n   \r\n    \r\n    console.log(results)\r\n  }, [searchTerm]);\r\n\r\n  // this.setState({\r\n  //   searchValue: search,\r\n  //   filteredPeople: this.state.people.filter(\r\n  //    item =>\r\n  //     (item.lastname && item.lastname.toLowerCase().includes(search)) ||\r\n  //     (item.name && item.name.toLowerCase().includes(search))\r\n  //   )\r\n  //  });\r\n\r\n\r\nconst handleDelete = (id, nameToBeDeleted,e) => {\r\n  if (window.confirm(`Delete ${nameToBeDeleted}?`)) {\r\n   service\r\n      .deletion(id)\r\n      .then(() => {\r\n        setMarkers(markers.filter(marker => marker.id !== id));\r\n        window.confirm(`Deleted ${nameToBeDeleted}`);\r\n      })\r\n       .catch(() => {\r\n         window.confirm(`Error: ${nameToBeDeleted} already deleted`, 'red');\r\n        setMarkers(markers.filter((marker) => marker.id !== id));\r\n       });\r\n  }\r\n}\r\n\r\nconst handleUpdate = (id, nameToBeDeleted,e) => {\r\n  \r\n}\r\n\r\n    function renderPopup (item){\r\n  \r\n      return (\r\n        \r\n        <Popup\r\n          \r\n        >\r\n           \r\n          <Link  to={item.link} >{item.description}</Link>\r\n        </Popup>\r\n        \r\n      );\r\n    }\r\n\r\n    \r\n    \r\n    const handleClick = (e) => {\r\n      e.latlng()\r\n    }\r\n  \r\n    const building = new Icon({\r\n      iconUrl: \"./icon_building.svg\",\r\n      iconSize: [25, 25]\r\n    });\r\n    \r\n     \r\n      \r\n  \r\n      \r\n      const [isOpen, setIsOpen] = useState(false);\r\n \r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n  return (\r\n\r\n\r\n          \r\n\r\n\r\n\r\n\r\n<Card>\r\n  <CardBody>    \r\n<Row className=\"iq-example-row\">\r\n\r\n\r\n\r\n                \r\n               \r\n<Row className=\"row\">\r\n<Col className=\"col-4\">\r\n{/* <div className=\"btn\" onClick={this.togglePopup}>\r\n      <button>New User?</button>\r\n      </div>\r\n    {isOpen ? <PopUp toggle={this.togglePopup} /> : null} */}\r\nSearch for:\r\n<input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n      />\r\n      <Button variant=\"btn btn-success\" onClick={() => '/EditFloormap'}>Edit</Button>\r\n      <br/>\r\n      <br/>\r\n{/* <DisplayEntries names={markers} deleteHandler={deleteHandler} /> */}\r\n<Table hover className=\"table\" items={markers}>\r\n   <thead>\r\n      <tr>\r\n         <th scope=\"col\">#</th>\r\n         <th scope=\"col\">Name</th>\r\n         <th scope=\"col\">Address</th>\r\n         <th scope=\"col\">Delete</th>\r\n         \r\n      </tr>\r\n   </thead>\r\n   <tbody>\r\n     \r\n                                {\r\n\r\n                                    markers.map((item, index) => (\r\n                                       \r\n                                        <tr key={index}>\r\n                                            <td >{item.id} </td>\r\n                                           <td> <Link   to={item.link} className=\"nav-link font-weight-bold \">{item.description} </Link></td>\r\n                                            <td >{item.street}   {item.Apartment} {item.doornum} {item.region} {item.country}</td>\r\n                                            <td><button type=\"button\"\r\n      onClick={() => handleDelete(item.id, item.description)}\r\n    > Delete </button></td>\r\n    \r\n    <td><Link   to=\"/EditFloorMap/3\" className=\"nav-link font-weight-bold \">edit</Link></td>\r\n\r\n\r\n    {/* <Link onClick={(e) => handleDelete(item.refnum, item.description, e)} className=\"nav-link font-weight-bold \">Delete</Link> */}\r\n\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n\r\n\r\n   </tbody>\r\n</Table>\r\n\r\n\r\n</Col>\r\n<Col className=\"col-8\">\r\n<MapContainer\r\n                                            style={ { height: \"500px\", width: \"100%\"}}\r\n                                            \r\n                                            center={[60.21679719545689, 24.810291821854594]} zoom={12} maxZoom={100}\r\n                                            \r\n                                        >\r\n    \r\n                                                <TileLayer\r\n                                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                            />\r\n                            \r\n                                {\r\n                                    markers.map((item, index) => (\r\n                                       \r\n                                        <Marker   \r\n                                                position={[item.latitude,item.longitude]}\r\n                                                onMouseOver={(e) => {\r\n                                                    e.target.openPopup();\r\n                                                  }}\r\n                                                  onMouseOut={(e) => {\r\n                                                    e.target.closePopup();\r\n                                                  }}\r\n                                                >\r\n                                                          {renderPopup(item) }\r\n                                                </Marker>\r\n                                    ))\r\n                                }\r\n\r\n      \r\n    \r\n    \r\n                                     </MapContainer>\r\n</Col>\r\n</Row>\r\n\r\n</Row> \r\n</CardBody>\r\n</Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Map1\r\n\r\n","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\EditFloormap.js",["144","145","146","147","148","149","150","151","152","153","154"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n //import React from 'react';\r\n //import { LayersControl as BaseLayersControl } from 'react-leaflet';\r\n import { CardBody,Card,ButtonGroup, Button,ButtonToolbar,Form,FormGroup,Label,Input } from 'reactstrap';\r\n import React, { useEffect, useState, LocationMarker } from \"react\";\r\n import { Col, Row } from \"reactstrap\";\r\n\r\n import {Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer,LayersControl, LayerGroup,useMapEvents} from 'react-leaflet';\r\nimport service from './services';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass EditFloorMap extends React.Component{\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n       markers:[]\r\n    };\r\n    debugger;\r\n    var that=this;\r\n    service.getAll().then(latlng =>{\r\n                           console.log(\"returning\", latlng)\r\n                          that.setState({ 'markers': latlng })\r\n                          \r\n                         });\r\n}\r\ncomponentDidMount() {\r\n  \r\n  \r\n  }\r\n//  LocationMarker(context1) {\r\n \r\n//     const main = context1;\r\n//   this.setState({position: null})\r\n//    //const [position, setPosition] = useState(null)\r\n//     var that=this;\r\n//     const map = useMapEvents({\r\n//       click() {\r\n//         debugger;\r\n//       },\r\n//       locationfound(e) {\r\n       \r\n//       },\r\n//     })\r\n  \r\n//     return position === null ? null : (\r\n//       <Marker position={position}>\r\n//         <Popup>You are here</Popup>\r\n//       </Marker>\r\n//     )\r\n\r\n// }\r\n \r\nrender(){\r\n\r\n  return ( \r\n    \r\n  <div>\r\n    \r\n                  {this.state.markers.filter(item => item.id===\"3\").map(filteredName => (\r\n                                            <div>\r\n                                              <Row className=\"row\">\r\n<Col className=\"col-4\">\r\n                                              \r\n                                              <FormGroup className=\"form-group\">\r\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\r\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\r\n                                              readOnly=\"\" defaultValue={filteredName.id} disabled/>\r\n                                              </FormGroup>\r\n                                             \r\n                                              <FormGroup className=\"form-group\">\r\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\r\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\r\n                                              readOnly=\"\" defaultValue={filteredName.description} />\r\n                                              </FormGroup>\r\n                                            \r\n                                              <FormGroup className=\"form-group\">\r\n                                              <Label htmlFor=\"exampleInputReadonly\">Street</Label>\r\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\r\n                                              readOnly=\"\" defaultValue={filteredName.street} />\r\n                                              </FormGroup>\r\n\r\n                                              <FormGroup className=\"form-group\">\r\n                                              <Label htmlFor=\"exampleInputReadonly\">Apartment</Label>\r\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\r\n                                              readOnly=\"\" defaultValue={filteredName.Apartment} />\r\n                                              </FormGroup>\r\n\r\n\r\n                                              <FormGroup className=\"form-group\">\r\n                                              <Label htmlFor=\"exampleInputReadonly\">Doornum</Label>\r\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\r\n                                              readOnly=\"\" defaultValue={filteredName.doornum} />\r\n                                              </FormGroup>\r\n\r\n\r\n                                              <FormGroup className=\"form-group\">\r\n                                              <Label htmlFor=\"exampleInputReadonly\">Region</Label>\r\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\r\n                                              readOnly=\"\" defaultValue={filteredName.region} />\r\n                                              </FormGroup>\r\n\r\n                                              <FormGroup className=\"form-group\">\r\n                                              <Label htmlFor=\"exampleInputReadonly\">Country</Label>\r\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\r\n                                              readOnly=\"\" defaultValue={filteredName.country} />\r\n                                              </FormGroup>\r\n\r\n                                              </Col>\r\n                                              <Col className=\"col-8\">\r\n\r\n                                              <MapContainer  \r\n                                                style={ { height: \"700px\", width: \"100%\"}}\r\n                                    \r\n                                                   center={[filteredName.latitude, filteredName.longitude]} zoom={17} maxZoom={100}\r\n                                    \r\n                                                   >\r\n                                  \r\n                                                            <LayersControl position=\"topright\">\r\n                                                        \r\n                                                        <TileLayer\r\n                                                          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                                          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                                        />\r\n\r\n                                                        <LayersControl.BaseLayer >\r\n                                                            </LayersControl.BaseLayer>   \r\n                                                        \r\n                                                              \r\n                                                                \r\n                                                           { filteredName.floors.map((floor, index) => (\r\n                                                                            \r\n                                                                          <LayersControl.Overlay checked name={floor.description}>\r\n                                                                          <LayerGroup>\r\n                                                                            {floor.boundaries.map((vertex,index) => (\r\n\r\n                                                                                  <Marker position={vertex} >\r\n                                                                                  <Popup>\r\n                                                                                  delete<br />\r\n                                                                                  </Popup>\r\n                                                                                  </Marker>\r\n                                                                            ))\r\n\r\n                                                                            }\r\n                                                                            {<Polygon positions={floor.boundaries} color={floor.color}/> }\r\n                                                                          </LayerGroup>\r\n                                                                          </LayersControl.Overlay>\r\n                                                                        \r\n                                                                        ))\r\n                                                         \r\n                                                                      }\r\n\r\n                                                      </LayersControl>  \r\n                                                      <LocationMarker context1={this}></LocationMarker>\r\n                             </MapContainer>     \r\n                             </Col>\r\n                             </Row>\r\n\r\n\r\n\r\n\r\n\r\n                                      </div>\r\n  \r\n                  ))}\r\n                   \r\n                   </div>)\r\n}\r\n\r\n}\r\nexport default EditFloorMap;","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\private-route\\PrivateRoute.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\FloorMap.js",["155","156","157","158","159","160","161","162","163","164"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n //import React from 'react';\r\n //import { LayersControl as BaseLayersControl } from 'react-leaflet';\r\n import { CardBody,Card,ButtonGroup, Button,ButtonToolbar, Label } from 'reactstrap';\r\n import React, { useEffect, useState } from \"react\";\r\n \r\n import {Tooltip, Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer,LayersControl, LayerGroup} from 'react-leaflet';\r\nimport service from './services';\r\nimport Map1 from './Map1';\r\nimport { Link } from \"react-router-dom\";\r\nimport SlickSliderStyle1 from \"./SlickSliderStyle1\";\r\n\r\n\r\nconst FloorMap  = () => {\r\n  \r\n    \r\n\r\n    const [markers, setMarkers] = useState([])\r\n   \r\n\r\n      useEffect(()=>{\r\n        service\r\n        .getAll()\r\n        .then(latlng =>{\r\n          console.log(\"returning\", latlng)\r\n          setMarkers(latlng)\r\n        })\r\n      },[])\r\n\r\n\r\n\r\n     const refno=window.location.pathname.replace('/FloorMap/','');\r\n      \r\n     const handleClick = (e) => {\r\n       console.log(e.target.value)\r\n      debugger;\r\n    }\r\n\r\n  return (\r\n\r\n    <Card >\r\n    <CardBody>\r\n\r\n<div>\r\n\r\n\r\n{/* <div> <Link to=\"/Map1\" className=\"btn btn-primary\"><p class=\"ri-home-4-line\"> Home </p></Link></div> */}\r\n\r\n\r\n\r\n\r\n\r\n                        {markers.filter(item => item.id===refno).map(filteredName => (\r\n                            <div>\r\n                              \r\n                             {/* <h1 className=\"display-7\">#{filteredName.id}-{filteredName.description}</h1> */}\r\n                             <h1 className=\"display-9\">{filteredName.street}   {filteredName.Apartment} {filteredName.doornum} {filteredName.region} {filteredName.country}</h1>\r\n                             {/* <ButtonToolbar className=\"mt-3\">\r\n                             <ButtonGroup className=\"mr-2\">\r\n                                 {filteredName.floors.map((item2, index) => (\r\n                                       \r\n                                      <Button color=\"secondary\" data-key={index}\r\n                                      \r\n                                      onClick={handleClick}> {item2.description}</Button>\r\n\r\n  \r\n                                   ))}\r\n                                   </ButtonGroup></ButtonToolbar> */}\r\n                             </div>\r\n\r\n\r\n\r\n\r\n                        ))}\r\n                        \r\n                        \r\n                        </div>\r\n                        <div>\r\n                        \r\n                        {markers.filter(item => item.id===refno).map(filteredName => (\r\n                            <div>\r\n\r\n                         <MapContainer\r\n                                    style={ { height: \"500px\", width: \"100%\"}}\r\n                                    \r\n                                    center={[filteredName.latitude, filteredName.longitude]} zoom={16} maxZoom={17}\r\n                                    \r\n                                >\r\n                                  \r\n\r\n                                        {/* <TileLayer\r\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                    /> */}\r\n\r\n<LayersControl position=\"topright\">\r\n<LayersControl.BaseLayer checked name={filteredName.name}>\r\n  \r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {/* {filteredName.floors.map((floor, index) => (\r\n        <LayersControl.Overlay checked name={floor.description}>\r\n        <LayerGroup>\r\n          <Polygon positions={floor.boundaries} color={floor.color}\r\n                             />\r\n        </LayerGroup>\r\n        </LayersControl.Overlay>\r\n      \r\n      ))} */}\r\n       \r\n         {/* <Polygon positions={floor.boundaries} color={floor.color}\r\n                             />  */}\r\n      </LayersControl.BaseLayer>\r\n      <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {filteredName.floors.map((floor, index) => (\r\n        <LayersControl.BaseLayer checked name={floor.description}>\r\n        <LayerGroup>\r\n          <Polygon positions={floor.boundaries} color={floor.color}\r\n                             />\r\n{\r\n  floor.blocks.map((block, ind) => (\r\n    <Polygon positions={block.bounds}>\r\n          {/* <Tooltip sticky>        {block.text}</Tooltip> */}\r\n      {/* <Popup direction=\"center\" >\r\n        {block.text}\r\n      </Popup> */\r\n      \r\n      <Marker position={block.marker}>\r\n              <Popup>\r\n                    <span>{block.text}</span>\r\n                    {/* <div className=\"iq-card-body\" id={'post-slider'}>\r\n                              <SlickSliderStyle1 slidesToShow={2}>\r\n                              <li className=\"d-flex align-items-center\">\r\n                                {block.images.map((img, idx) => (\r\n                                  <div>\r\n                                  <div className=\"post-image\">\r\n                                  <a href=\"#\">\r\n                                      <img src={img} alt=\"post-image\" className=\"img-fluid rounded\" />\r\n                                  </a>\r\n                                  </div>\r\n                                  <div className=\"post-content pl-3\">\r\n\r\n                                  <div className=\"text-center d-flex align-items-center justify-content-between\">\r\n                                      \r\n                                  </div>\r\n                                  </div>\r\n                                  </div>\r\n                                ))}\r\n                                   \r\n                                 </li>\r\n                                 </SlickSliderStyle1>\r\n                                 </div> */}\r\n              </Popup>\r\n              \r\n      </Marker>\r\n\r\n      }\r\n    </Polygon> \r\n                             \r\n                             \r\n\r\n  ))\r\n}\r\n\r\n        </LayerGroup>\r\n        </LayersControl.BaseLayer>\r\n      \r\n      ))}\r\n\r\n\r\n     \r\n      \r\n      \r\n      \r\n      \r\n{/* {filteredName.floors.map((floor, index) => (\r\n      \r\n))} */}\r\n      \r\n      </LayersControl>\r\n\r\n                                    {/* {filteredName.floors.map((floor, index) => (\r\n                            //           <Polygon positions={floor.boundaries} color={floor.color}\r\n                            //  /> \r\n                            <LayersControl.Overlay name={floor.description} id={floor.floorno}>\r\n                            <LayerGroup>\r\n                            <Polygon positions={floor.boundaries} color={floor.color}\r\n                              /> \r\n                            </LayerGroup>\r\n                          </LayersControl.Overlay>\r\n\r\n                                    ))} */}\r\n\r\n\r\n\r\n                             </MapContainer> \r\n                             </div>\r\n                        ))\r\n                        }\r\n                        </div>\r\n    </CardBody>\r\n    </Card>  \r\n\r\n  );\r\n}\r\n\r\nexport default FloorMap;\r\n","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\services.js",["165"],"import axios from \"axios\"\r\n\r\nconst baseUrl = \"http://localhost:3010/data\"\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = newEntry =>{\r\n    const request = axios.post(baseUrl, newEntry)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletion = entryId =>{\r\n    const request = axios.delete(baseUrl + `/${entryId}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nexport default {getAll, update, deletion, deleteAll}","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\actions\\types.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Dashboard.js",["166","167","168","169"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n//import MapView from \"./MapView.js\";\r\nimport Map1 from \"./Map1.js\";\r\nimport { Link } from 'react-router-dom';\r\n//import {MapContainer,  Marker, Popup,  TileLayer } from \"react-leaflet\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n//import { useHistory } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  \r\n  \r\n  render() {\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <div >\r\n        {/* <span className=\"myClass\" style={{float : 'left', paddingRight : '5px'}} > </span> */}\r\n        {/* style=\"font-size: 20px; color:#4a54f1; text-align:center; padding-top:100px;\" */}\r\n        <p style={{fontSize: '20px', color: 'white'}}> Hi <i><b>{user.name}</b></i></p>\r\n               \r\n                {/* <MapView /> */}\r\n            <div>\r\n            \r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n                \r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-primary float-left\"\r\n            >\r\n              Logout\r\n            </button>\r\n            </div>\r\n          </div>\r\n        \r\n        \r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);\r\n","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\DisplayEntries.js",["170","171","172","173","174","175","176","177","178","179","180"],"/*import React from \"react\"\r\n\r\nconst DisplayEntry = ({ name }) => {\r\n    return(\r\n        <div>\r\n            {name} \r\n        </div>\r\n    )\r\n}\r\n\r\nconst DisplayEntries = ({ names, regVal }) => {\r\n    const regExp = new RegExp(regVal, \"i\")\r\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\r\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\r\n    return(\r\n    <div>\r\n        {namesArray}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DisplayEntries*/\r\n\r\nimport React, {useState, useEffect} from \"react\"\r\nimport service from \"./services.js\"\r\nimport {Row, Col, Table, Card, CardBody} from 'reactstrap';\r\nimport { Grid,  TableHeaderRow, TableEditColumn, TableInlineCellEditing } from '@devexpress/dx-react-grid-bootstrap4';\r\nimport { Link } from \"react-router-dom\";\r\nconst getRowId = row => row.id;\r\n\r\nconst DisplayEntry = ({ name, street, apartment,doorno, region, country, id }) => {\r\n    const [ name1, setName ] = useState(name)\r\n    const [ street1, setStreet] = useState(street)\r\n    const [ apartment1, setApartment] = useState(apartment)\r\n    const [ doorno1, setDoorno] = useState(doorno)\r\n    const [ region1, setRegion] = useState(region)\r\n    const [ country1, setCountry] = useState(country)\r\n  //  const [ newNumber, setNumber ] = useState(number)\r\n    const [ buttonVal, setButtonVal ] = useState(\"\")\r\n    const [markers, setMarkers] = useState([])\r\n   \r\n\r\n      useEffect(()=>{\r\n        service\r\n        .getAll()\r\n        .then(latlng =>{\r\n          console.log(\"returning\", latlng)\r\n          setMarkers(latlng)\r\n        })\r\n      },[])\r\n\r\n    // const [columns] = useState([\r\n    //     {\r\n    //         title: \"Name\",\r\n    //         name: \"name\",\r\n    //     },\r\n    //     {\r\n    //         title: \"Lat\",\r\n    //         name: \"lat\",\r\n    //         sortable: true,\r\n    //     },\r\n    //     {\r\n    //         title: \"Lng\",\r\n    //         name: \"lng\",\r\n    //         sortable: true,\r\n    //     },\r\n    // ]);\r\n    // const [rows, setRows] = useState([\r\n    //     {newName},\r\n    //     {newLat},\r\n    //     {newLng}\r\n        \r\n    // ]);\r\n    // const [editingCells, setEditingCells] = useState([]);\r\n\r\n    // const deleteHandler = (id) =>{\r\n    //     const handler = () =>{\r\n    //         if(window.confirm(`Do you really want to delete ${name}\\'s Building details?`)){\r\n    //             service.deletion(id)\r\n    //             .then(response => {\r\n                    \r\n    //                 setName(\"\")\r\n    //                 setStreet(\"\")\r\n    //                 setApartment(\"\")\r\n    //               setDoorno(\"\")\r\n    //               setRegion(\"\")\r\n    //               setCountry(\"\")\r\n    //             setButtonVal(\"\")\r\n    //             })\r\n    //         }\r\n    //     }\r\n    //     return handler\r\n    // }\r\n    const deleteHandler = (id) => {\r\n        const handler = () =>{\r\n                   if(window.confirm(`Do you really want to delete ${name}\\'s Building details?`)){\r\n  \r\n        service\r\n        .deletion(id)\r\n          .then(response => {\r\n            setName(\"\")\r\n                    setStreet(\"\")\r\n                    setApartment(\"\")\r\n                  setDoorno(\"\")\r\n                  setRegion(\"\")\r\n                   setCountry(\"\")\r\n                setButtonVal(\"\")\r\n          })\r\n        }\r\n    }\r\n    return handler\r\n          \r\n      };\r\n\r\n    useEffect(()=>{\r\n        setButtonVal(<button onClick={deleteHandler(id)}>delete</button>)\r\n    },\r\n    [])\r\n\r\n    return(\r\n       \r\n        <div>\r\n            <Table hover className=\"table\" items={markers}>\r\n   <thead>\r\n      <tr>\r\n         <th scope=\"col\">#</th>\r\n         <th scope=\"col\">Name</th>\r\n         <th scope=\"col\">Address</th>\r\n         <th scope=\"col\">Delete</th>\r\n         \r\n      </tr>\r\n   </thead>\r\n   <tbody>\r\n     \r\n                                {\r\n                                    markers.map((item, index) => (\r\n                                       \r\n                                        <tr key={index}>\r\n                                            <td >{item.id} </td>\r\n                                           <td> <Link   to={item.link} className=\"nav-link font-weight-bold \">{name1} </Link></td>\r\n                                            <td >{street1}   {apartment1} {doorno1} {region1} {country1}</td>\r\n                                            {buttonVal} \r\n\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n\r\n\r\n   </tbody>\r\n   </Table>\r\n            {/* {newName}\r\n            {newLat}\r\n            {newLng}\r\n            {buttonVal} */}\r\n           \r\n\r\n            {/* <Table className=\"table\" items={{DisplayEntries}}>   \r\n      <thead>\r\n    \r\n    <th>Name</th>\r\n    <th>Lat</th>\r\n    <th>Lng</th>\r\n  \r\n          </thead>          \r\n \r\n<tbody>\r\n \r\n  <tr>\r\n    \r\n  </tr>\r\n  </tbody>\r\n  </Table> */}\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\nconst DisplayEntries = ({ names, regVal }) => {\r\n    const regExp = new RegExp(regVal, \"i\")\r\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\r\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.description} street={entry.street} apartment={entry.Apartment} doorno={entry.doornum} region={entry.region} country={entry.country} id={entry.id} />)\r\n    \r\n    return(\r\n    <div>\r\n        {namesArray}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DisplayEntries","C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Tabs.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\history.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\SlickSliderStyle1.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\reducers\\index.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\components\\dashboard\\Tab.js",[],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\reducers\\errorReducer.js",[],["181","182"],"C:\\Users\\phani.kumar.vankadar\\OneDrive - Sofigate Oy\\phani\\cms\\2ndjan\\CMS\\client\\src\\reducers\\authReducer.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":22},{"ruleId":"187","severity":1,"message":"191","line":9,"column":10,"nodeType":"189","messageId":"190","endLine":9,"endColumn":17},{"ruleId":"187","severity":1,"message":"192","line":9,"column":26,"nodeType":"189","messageId":"190","endLine":9,"endColumn":35},{"ruleId":"187","severity":1,"message":"193","line":11,"column":17,"nodeType":"189","messageId":"190","endLine":11,"endColumn":26},{"ruleId":"187","severity":1,"message":"194","line":11,"column":38,"nodeType":"189","messageId":"190","endLine":11,"endColumn":43},{"ruleId":"187","severity":1,"message":"195","line":14,"column":9,"nodeType":"189","messageId":"190","endLine":14,"endColumn":12},{"ruleId":"187","severity":1,"message":"196","line":14,"column":13,"nodeType":"189","messageId":"190","endLine":14,"endColumn":20},{"ruleId":"187","severity":1,"message":"197","line":14,"column":21,"nodeType":"189","messageId":"190","endLine":14,"endColumn":28},{"ruleId":"187","severity":1,"message":"198","line":14,"column":29,"nodeType":"189","messageId":"190","endLine":14,"endColumn":39},{"ruleId":"187","severity":1,"message":"199","line":14,"column":40,"nodeType":"189","messageId":"190","endLine":14,"endColumn":47},{"ruleId":"187","severity":1,"message":"200","line":15,"column":8,"nodeType":"189","messageId":"190","endLine":15,"endColumn":12},{"ruleId":"187","severity":1,"message":"201","line":16,"column":8,"nodeType":"189","messageId":"190","endLine":16,"endColumn":17},{"ruleId":"187","severity":1,"message":"202","line":17,"column":8,"nodeType":"189","messageId":"190","endLine":17,"endColumn":17},{"ruleId":"187","severity":1,"message":"203","line":19,"column":16,"nodeType":"189","messageId":"190","endLine":19,"endColumn":22},{"ruleId":"187","severity":1,"message":"204","line":20,"column":10,"nodeType":"189","messageId":"190","endLine":20,"endColumn":24},{"ruleId":"187","severity":1,"message":"205","line":22,"column":8,"nodeType":"189","messageId":"190","endLine":22,"endColumn":15},{"ruleId":"187","severity":1,"message":"206","line":31,"column":14,"nodeType":"189","messageId":"190","endLine":31,"endColumn":23},{"ruleId":"187","severity":1,"message":"207","line":31,"column":25,"nodeType":"189","messageId":"190","endLine":31,"endColumn":37},{"ruleId":"187","severity":1,"message":"208","line":32,"column":15,"nodeType":"189","messageId":"190","endLine":32,"endColumn":24},{"ruleId":"187","severity":1,"message":"209","line":32,"column":26,"nodeType":"189","messageId":"190","endLine":32,"endColumn":38},{"ruleId":"187","severity":1,"message":"210","line":50,"column":13,"nodeType":"189","messageId":"190","endLine":50,"endColumn":17},{"ruleId":"187","severity":1,"message":"211","line":63,"column":13,"nodeType":"189","messageId":"190","endLine":63,"endColumn":15},{"ruleId":"187","severity":1,"message":"212","line":69,"column":13,"nodeType":"189","messageId":"190","endLine":69,"endColumn":15},{"ruleId":"187","severity":1,"message":"213","line":79,"column":13,"nodeType":"189","messageId":"190","endLine":79,"endColumn":21},{"ruleId":"187","severity":1,"message":"214","line":85,"column":13,"nodeType":"189","messageId":"190","endLine":85,"endColumn":20},{"ruleId":"187","severity":1,"message":"215","line":91,"column":9,"nodeType":"189","messageId":"190","endLine":91,"endColumn":22},{"ruleId":"187","severity":1,"message":"216","line":92,"column":9,"nodeType":"189","messageId":"190","endLine":92,"endColumn":23},{"ruleId":"187","severity":1,"message":"217","line":93,"column":9,"nodeType":"189","messageId":"190","endLine":93,"endColumn":23},{"ruleId":"187","severity":1,"message":"218","line":99,"column":15,"nodeType":"189","messageId":"190","endLine":99,"endColumn":24},{"ruleId":"187","severity":1,"message":"219","line":102,"column":13,"nodeType":"189","messageId":"190","endLine":102,"endColumn":26},{"ruleId":"187","severity":1,"message":"220","line":107,"column":17,"nodeType":"189","messageId":"190","endLine":107,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":142,"column":6,"nodeType":"223","endLine":142,"endColumn":18,"suggestions":"224"},{"ruleId":"187","severity":1,"message":"225","line":169,"column":7,"nodeType":"189","messageId":"190","endLine":169,"endColumn":19},{"ruleId":"187","severity":1,"message":"226","line":189,"column":11,"nodeType":"189","messageId":"190","endLine":189,"endColumn":22},{"ruleId":"187","severity":1,"message":"227","line":193,"column":11,"nodeType":"189","messageId":"190","endLine":193,"endColumn":19},{"ruleId":"187","severity":1,"message":"228","line":204,"column":9,"nodeType":"189","messageId":"190","endLine":204,"endColumn":20},{"ruleId":"187","severity":1,"message":"229","line":4,"column":11,"nodeType":"189","messageId":"190","endLine":4,"endColumn":19},{"ruleId":"187","severity":1,"message":"230","line":4,"column":20,"nodeType":"189","messageId":"190","endLine":4,"endColumn":24},{"ruleId":"187","severity":1,"message":"231","line":4,"column":25,"nodeType":"189","messageId":"190","endLine":4,"endColumn":36},{"ruleId":"187","severity":1,"message":"232","line":4,"column":38,"nodeType":"189","messageId":"190","endLine":4,"endColumn":44},{"ruleId":"187","severity":1,"message":"233","line":4,"column":45,"nodeType":"189","messageId":"190","endLine":4,"endColumn":58},{"ruleId":"187","severity":1,"message":"234","line":4,"column":59,"nodeType":"189","messageId":"190","endLine":4,"endColumn":63},{"ruleId":"187","severity":1,"message":"235","line":5,"column":18,"nodeType":"189","messageId":"190","endLine":5,"endColumn":27},{"ruleId":"187","severity":1,"message":"236","line":5,"column":29,"nodeType":"189","messageId":"190","endLine":5,"endColumn":37},{"ruleId":"187","severity":1,"message":"192","line":8,"column":26,"nodeType":"189","messageId":"190","endLine":8,"endColumn":35},{"ruleId":"187","severity":1,"message":"237","line":8,"column":96,"nodeType":"189","messageId":"190","endLine":8,"endColumn":108},{"ruleId":"187","severity":1,"message":"238","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":14},{"ruleId":"187","severity":1,"message":"231","line":4,"column":25,"nodeType":"189","messageId":"190","endLine":4,"endColumn":36},{"ruleId":"187","severity":1,"message":"232","line":4,"column":38,"nodeType":"189","messageId":"190","endLine":4,"endColumn":44},{"ruleId":"187","severity":1,"message":"233","line":4,"column":45,"nodeType":"189","messageId":"190","endLine":4,"endColumn":58},{"ruleId":"187","severity":1,"message":"239","line":4,"column":60,"nodeType":"189","messageId":"190","endLine":4,"endColumn":65},{"ruleId":"187","severity":1,"message":"240","line":7,"column":10,"nodeType":"189","messageId":"190","endLine":7,"endColumn":17},{"ruleId":"187","severity":1,"message":"192","line":7,"column":35,"nodeType":"189","messageId":"190","endLine":7,"endColumn":44},{"ruleId":"187","severity":1,"message":"241","line":9,"column":8,"nodeType":"189","messageId":"190","endLine":9,"endColumn":12},{"ruleId":"187","severity":1,"message":"238","line":10,"column":10,"nodeType":"189","messageId":"190","endLine":10,"endColumn":14},{"ruleId":"187","severity":1,"message":"242","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":25},{"ruleId":"187","severity":1,"message":"226","line":34,"column":12,"nodeType":"189","messageId":"190","endLine":34,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":26,"column":1,"nodeType":"245","endLine":26,"endColumn":53},{"ruleId":"187","severity":1,"message":"241","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":12},{"ruleId":"187","severity":1,"message":"238","line":7,"column":10,"nodeType":"189","messageId":"190","endLine":7,"endColumn":14},{"ruleId":"187","severity":1,"message":"246","line":9,"column":27,"nodeType":"189","messageId":"190","endLine":9,"endColumn":33},{"ruleId":"187","severity":1,"message":"247","line":9,"column":35,"nodeType":"189","messageId":"190","endLine":9,"endColumn":40},{"ruleId":"187","severity":1,"message":"248","line":26,"column":9,"nodeType":"189","messageId":"190","endLine":26,"endColumn":12},{"ruleId":"187","severity":1,"message":"249","line":26,"column":14,"nodeType":"189","messageId":"190","endLine":26,"endColumn":17},{"ruleId":"187","severity":1,"message":"230","line":26,"column":26,"nodeType":"189","messageId":"190","endLine":26,"endColumn":30},{"ruleId":"187","severity":1,"message":"229","line":26,"column":32,"nodeType":"189","messageId":"190","endLine":26,"endColumn":40},{"ruleId":"187","severity":1,"message":"250","line":27,"column":10,"nodeType":"189","messageId":"190","endLine":27,"endColumn":14},{"ruleId":"187","severity":1,"message":"251","line":27,"column":17,"nodeType":"189","messageId":"190","endLine":27,"endColumn":31},{"ruleId":"187","severity":1,"message":"252","line":27,"column":33,"nodeType":"189","messageId":"190","endLine":27,"endColumn":48},{"ruleId":"187","severity":1,"message":"253","line":27,"column":50,"nodeType":"189","messageId":"190","endLine":27,"endColumn":72},{"ruleId":"187","severity":1,"message":"254","line":29,"column":7,"nodeType":"189","messageId":"190","endLine":29,"endColumn":15},{"ruleId":"255","severity":1,"message":"256","line":96,"column":75,"nodeType":"257","messageId":"258","endLine":96,"endColumn":76,"suggestions":"259"},{"ruleId":"221","severity":1,"message":"260","line":118,"column":5,"nodeType":"223","endLine":118,"endColumn":7,"suggestions":"261"},{"ruleId":"183","replacedBy":"262"},{"ruleId":"185","replacedBy":"263"},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'DisplayEntries' is defined but never used.","Identifier","unusedVar","'Polygon' is defined but never used.","'Rectangle' is defined but never used.","'Container' is defined but never used.","'PopUp' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'Tabs' is defined but never used.","'PropTypes' is defined but never used.","'DashBoard' is defined but never used.","'marker' is defined but never used.","'SelectionState' is defined but never used.","'history' is defined but never used.","'newFilter' is assigned a value but never used.","'setNewFilter' is assigned a value but never used.","'buttonVal' is assigned a value but never used.","'setButtonVal' is assigned a value but never used.","'kids' is assigned a value but never used.","'tv' is assigned a value but never used.","'wc' is assigned a value but never used.","'Corridar' is assigned a value but never used.","'Kitchen' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","'changeHandler1' is assigned a value but never used.","'changeHandler2' is assigned a value but never used.","'position1' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'allMarkers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'markers'. Either include it or remove the dependency array.","ArrayExpression",["266"],"'handleUpdate' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'building' is assigned a value but never used.","'togglePopup' is assigned a value but never used.","'CardBody' is defined but never used.","'Card' is defined but never used.","'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'ButtonToolbar' is defined but never used.","'Form' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useMapEvents' is defined but never used.","'Link' is defined but never used.","'Label' is defined but never used.","'Tooltip' is defined but never used.","'Map1' is defined but never used.","'SlickSliderStyle1' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Router' is defined but never used.","'Route' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Grid' is defined but never used.","'TableHeaderRow' is defined but never used.","'TableEditColumn' is defined but never used.","'TableInlineCellEditing' is defined but never used.","'getRowId' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["267","268"],"React Hook useEffect has missing dependencies: 'deleteHandler' and 'id'. Either include them or remove the dependency array. If 'setButtonVal' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["269"],["264"],["265"],"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"messageId":"272","fix":"273","desc":"274"},{"messageId":"275","fix":"276","desc":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [markers, searchTerm]",{"range":"280","text":"281"},"removeEscape",{"range":"282","text":"283"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"284","text":"285"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [deleteHandler, id]",{"range":"286","text":"287"},[3855,3867],"[markers, searchTerm]",[2969,2970],"",[2969,2969],"\\",[3488,3490],"[deleteHandler, id]"]