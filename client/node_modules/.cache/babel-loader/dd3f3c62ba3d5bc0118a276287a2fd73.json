{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n//import React from 'react';\n//import { LayersControl as BaseLayersControl } from 'react-leaflet';\nimport { CardBody, Card, ButtonGroup, Button, ButtonToolbar, Form, FormGroup, Label, Input } from 'reactstrap';\nimport React, { useEffect, useState } from \"react\";\nimport { Polygon, Popup, Rectangle, Marker, TileLayer, MapContainer, LayersControl, LayerGroup, useMapEvents } from 'react-leaflet';\nimport service from './services';\nimport Map1 from './Map1';\nimport { Link } from \"react-router-dom\";\n\nvar EditFloorMap = function EditFloorMap() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  function LocationMarker() {\n    _s();\n\n    var _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        position = _useState2[0],\n        setPosition = _useState2[1];\n\n    var map = useMapEvents({\n      click(e) {\n        debugger;\n      },\n\n      locationfound(e) {\n        setPosition(e.latlng);\n        map.flyTo(e.latlng, map.getZoom());\n      }\n\n    });\n    return position === null ? null : /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"You are here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(LocationMarker, \"Z+4nsYfm7MoZ42b9yWfecTtPTPw=\", false, function () {\n    return [useMapEvents];\n  });\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      markers = _useState4[0],\n      setMarkers = _useState4[1];\n\n  useEffect(function () {\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      setMarkers(latlng);\n    });\n  }, []);\n\n  var handleMapClick = function handleMapClick(e) {\n    debugger;\n  };\n\n  var refno = window.location.pathname.replace('/EditFloorMap/', '');\n  console.log(markers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: markers.filter(function (item) {\n        return item.id === refno;\n      }).map(function (filteredName) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.id,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.Apartment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.doornum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              onClick: handleMapClick,\n              style: {\n                height: \"500px\",\n                width: \"100%\"\n              },\n              center: [filteredName.latitude, filteredName.longitude],\n              zoom: 18,\n              maxZoom: 100,\n              children: [/*#__PURE__*/_jsxDEV(LocationMarker, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 35\n              }, _this), /*#__PURE__*/_jsxDEV(LayersControl, {\n                position: \"topright\",\n                children: /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n                  checked: true,\n                  name: filteredName.name,\n                  children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n                    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 39\n                  }, _this), filteredName.floors.map(function (floor, index) {\n                    return /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n                      checked: true,\n                      name: floor.description,\n                      children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n                        children: [floor.boundaries.map(function (vertex, index) {\n                          return /*#__PURE__*/_jsxDEV(Marker, {\n                            position: vertex,\n                            children: /*#__PURE__*/_jsxDEV(Popup, {\n                              children: [\"delete\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 133,\n                                columnNumber: 53\n                              }, _this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 132,\n                              columnNumber: 47\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 131,\n                            columnNumber: 47\n                          }, _this);\n                        }), /*#__PURE__*/_jsxDEV(Polygon, {\n                          positions: floor.boundaries,\n                          color: floor.color\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 139,\n                          columnNumber: 42\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 39\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 39\n                    }, _this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 31\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 28\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 45\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 45\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(EditFloorMap, \"aVe0o7Xd1RI2qqyy9XuFimi/3oU=\");\n\n_c = EditFloorMap;\nexport default EditFloorMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFloorMap\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js"],"names":["CardBody","Card","ButtonGroup","Button","ButtonToolbar","Form","FormGroup","Label","Input","React","useEffect","useState","Polygon","Popup","Rectangle","Marker","TileLayer","MapContainer","LayersControl","LayerGroup","useMapEvents","service","Map1","Link","EditFloorMap","LocationMarker","position","setPosition","map","click","e","locationfound","latlng","flyTo","getZoom","markers","setMarkers","getAll","then","console","log","handleMapClick","refno","window","location","pathname","replace","filter","item","id","filteredName","description","street","Apartment","doornum","region","country","height","width","latitude","longitude","name","floors","floor","index","boundaries","vertex","color"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n //import React from 'react';\n //import { LayersControl as BaseLayersControl } from 'react-leaflet';\n import { CardBody,Card,ButtonGroup, Button,ButtonToolbar,Form,FormGroup,Label,Input } from 'reactstrap';\n import React, { useEffect, useState } from \"react\";\n \n import {Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer,LayersControl, LayerGroup,useMapEvents} from 'react-leaflet';\nimport service from './services';\nimport Map1 from './Map1';\nimport { Link } from \"react-router-dom\";\n\n\nconst EditFloorMap  = () => {\n\n  function LocationMarker() {\n    const [position, setPosition] = useState(null)\n    const map = useMapEvents({\n      click(e) {\n       debugger;\n      },\n      locationfound(e) {\n        setPosition(e.latlng)\n        map.flyTo(e.latlng, map.getZoom())\n      },\n    })\n  \n    return position === null ? null : (\n      <Marker position={position}>\n        <Popup>You are here</Popup>\n      </Marker>\n    )\n  }\n\n  const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n\n      const handleMapClick = (e) => {\n       debugger;\n      }\n      const refno=window.location.pathname.replace('/EditFloorMap/','');\n      console.log(markers);\n      return(\n        <div>\n          <Form>\n\n        \n                          {markers.filter(item => item.id===refno).map(filteredName => (\n                                            <div>\n                                              \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.id} disabled/>\n                                              </FormGroup>\n                                             \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.description} />\n                                              </FormGroup>\n                                            \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.street} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.Apartment} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.doornum} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.region} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.country} />\n                                              </FormGroup>\n\n\n                                            <div>\n\n                           <MapContainer onClick=    {handleMapClick} \n                                    style={ { height: \"500px\", width: \"100%\"}}\n                                    \n                                    center={[filteredName.latitude, filteredName.longitude]} zoom={18} maxZoom={100}\n                                    \n                                >\n                                  \n                                  <LocationMarker />\n                                        {/* <TileLayer\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                    /> */}\n\n                              <LayersControl position=\"topright\">\n                              <LayersControl.BaseLayer checked name={filteredName.name}>\n                                \n                                      <TileLayer\n                                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                      />\n                                      {filteredName.floors.map((floor, index) => (\n                                      <LayersControl.Overlay checked name={floor.description}>\n                                      <LayerGroup>\n                                        {floor.boundaries.map((vertex,index) => (\n\n                                              <Marker position={vertex} >\n                                              <Popup>\n                                              delete<br />\n                                              </Popup>\n                                              </Marker>\n                                        ))\n\n                                        }\n                                        {<Polygon positions={floor.boundaries} color={floor.color}/> }\n                                      </LayerGroup>\n                                      </LayersControl.Overlay>\n                                    \n                                    ))}\n                                      {/* <Polygon positions={floor.boundaries} color={floor.color}\n                                                          />  */}\n                                    </LayersControl.BaseLayer>\n                                    \n                                    \n                                    \n                              {/* {filteredName.floors.map((floor, index) => (\n                                    \n                              ))} */}\n                                    \n                                    </LayersControl>  \n\n                                  \n\n\n                             </MapContainer> \n                                            </div>\n\n\n                                            </div>\n\n\n\n\n                                        ))}\n\n              </Form>\n\n        </div>\n      );\n}\n\n  \n   export default EditFloorMap;"]},"metadata":{},"sourceType":"module"}