{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n// import React from 'react';\nimport React, { useEffect, useState } from \"react\";\nimport { CardBody, Card } from 'reactstrap';\nimport { Polygon, Popup, Rectangle, Marker, TileLayer, MapContainer } from 'react-leaflet';\nimport service from './services';\nimport { Link } from \"react-router-dom\"; // class Index extends React.Component {\n// state = {\n//     markers: []\n// }\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             lat: 51.505,\n//             lng: -0.09,\n//             zoom: 13,\n//           };\n//     //     this.state = {\n//     //         style: {\n//     //             backgroundImage: `url(${require('../../../assets/images/page-img/33.png')})`,\n//     //             backgroundSize: 'cover',\n//     //             height: \"423px\"\n//     //         }\n//     //     };\n//     //     this.sayHello = this.sayHello.bind(this);\n//     // }\n//     // sayHello() {\n//     //     this.props.history.push('/dashboard1');\n//     //   }\n// }\n//     componentDidMount() {\n//         const baseUrl = axios.get(`http://localhost:3010/data`)\n//         const getAll = () =>{\n//             const request = axios.get(baseUrl)\n//             return request.then(response => response.data)\n//         }\n//         this.refno=window.location.pathname.replace('/Detail/','');\n//         setTimeout(function () {\n//             index();\n//         }, 800);\n//         document.getElementById('body').className = 'sidebar-main-active right-column-fixed header-top-bgcolor'\n//     }\n//     componentWillUnmount() {\n//         document.getElementById('body').className = ''\n//     }\n//     render() {\n//         const position = [this.state.lat, this.state.lng];\n//         return (\n//             <>\n//             <Card >\n//             <CardBody>\n//                             <div>\n//                                 {this.state.markers.filter(item => item.refnum===this.refno).map(filteredName => (\n//                                     <div>\n//                                      <h1 className=\"display-8\">#{filteredName.refnum}-{filteredName.description}</h1>\n//                                      <h1 className=\"display-9\">{filteredName.street}   {filteredName.Apartment} {filteredName.doornum} {filteredName.region} {filteredName.country}</h1>\n//                                      </div>\n//                                 ))}\n//                                 </div>\n//                                 <div>\n//                                 {this.state.markers.filter(item => item.refnum===this.refno).map(filteredName => (\n//                                     <div>\n//                                 <MapContainer\n//                                             style={ { height: \"500px\", width: \"100%\"}}\n//                                             center={[filteredName.latitude, filteredName.longitude]} zoom={18} maxZoom={100}\n//                                         >\n//                                                 <TileLayer\n//                                             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                                             attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n//                                             />\n//                                     <Polygon positions={filteredName.boundaries} color='red'\n//                                      />\n//                                      </MapContainer>\n//                                      </div>\n//                                 ))\n//                                 }\n//                                 </div>\n//             </CardBody>\n//             </Card>\n//             </>\n//         );\n//     }\n// }\n\nvar FloorMap = function FloorMap() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  useEffect(function () {\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      setMarkers(latlng);\n    });\n  }, []);\n  var refno = window.location.pathname.replace('/FloorMap/', '');\n  console.log(refno);\n\n  function renderPopup(item) {\n    return /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: item.link,\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"500px\",\n          width: \"100%\"\n        },\n        center: [60.21679719545689, 24.810291821854594],\n        zoom: 12,\n        maxZoom: 100,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 49\n        }, _this), markers.map(function (item, index) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [item.latitude, item.longitude],\n            onMouseOver: function onMouseOver(e) {\n              e.target.openPopup();\n            },\n            onMouseOut: function onMouseOut(e) {\n              e.target.closePopup();\n            },\n            children: renderPopup(item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 41\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FloorMap, \"aVe0o7Xd1RI2qqyy9XuFimi/3oU=\");\n\n_c = FloorMap;\nexport default FloorMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"FloorMap\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js"],"names":["React","useEffect","useState","CardBody","Card","Polygon","Popup","Rectangle","Marker","TileLayer","MapContainer","service","Link","FloorMap","markers","setMarkers","getAll","then","latlng","console","log","refno","window","location","pathname","replace","renderPopup","item","link","description","height","width","map","index","latitude","longitude","e","target","openPopup","closePopup"],"mappings":";;;;;;;AAAA;AACA;AACC,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAkBC,IAAlB,QAA8B,YAA9B;AAGA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,SAA3C,EAAuDC,YAAvD,QAA0E,eAA1E;AACD,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,QAAQ,GAAI,SAAZA,QAAY,GAAM;AAAA;;AAAA,kBAIUX,QAAQ,CAAC,EAAD,CAJlB;AAAA;AAAA,MAIbY,OAJa;AAAA,MAIJC,UAJI;;AAOlBd,EAAAA,SAAS,CAAC,YAAI;AACZU,IAAAA,OAAO,CACNK,MADD,GAECC,IAFD,CAEM,UAAAC,MAAM,EAAG;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACAH,MAAAA,UAAU,CAACG,MAAD,CAAV;AACD,KALD;AAMD,GAPQ,EAOP,EAPO,CAAT;AAWD,MAAMG,KAAK,GAACC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,YAAjC,EAA8C,EAA9C,CAAZ;AAELN,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AAOA,WAASK,WAAT,CAAsBC,IAAtB,EAA2B;AAEvB,wBAEE,QAAC,KAAD;AAAA,6BAIE,QAAC,IAAD;AAAO,QAAA,EAAE,EAAEA,IAAI,CAACC,IAAhB;AAAA,kBAAwBD,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAFF;AAUD;;AAGD,sBAEE,QAAC,IAAD;AAAA,2BACA,QAAC,QAAD;AAAA,6BACA,QAAC,YAAD;AACwC,QAAA,KAAK,EAAG;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SADhD;AAGwC,QAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,kBAApB,CAHhD;AAGyF,QAAA,IAAI,EAAE,EAH/F;AAGmG,QAAA,OAAO,EAAE,GAH5G;AAAA,gCAO4C,QAAC,SAAD;AACJ,UAAA,GAAG,EAAC,oDADA;AAEJ,UAAA,WAAW,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,iBAP5C,EAagCjB,OAAO,CAACkB,GAAR,CAAY,UAACL,IAAD,EAAOM,KAAP;AAAA,8BAER,QAAC,MAAD;AACQ,YAAA,QAAQ,EAAE,CAACN,IAAI,CAACO,QAAN,EAAeP,IAAI,CAACQ,SAApB,CADlB;AAEQ,YAAA,WAAW,EAAE,qBAACC,CAAD,EAAO;AAChBA,cAAAA,CAAC,CAACC,MAAF,CAASC,SAAT;AACD,aAJX;AAKU,YAAA,UAAU,EAAE,oBAACF,CAAD,EAAO;AACjBA,cAAAA,CAAC,CAACC,MAAF,CAASE,UAAT;AACD,aAPX;AAAA,sBASmBb,WAAW,CAACC,IAAD;AAT9B;AAAA;AAAA;AAAA;AAAA,mBAFQ;AAAA,SAAZ,CAbhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,WAFF;AAiFD,CA3HD;;GAAMd,Q;;KAAAA,Q;AA6HN,eAAeA,QAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n// import React from 'react';\n import React, { useEffect, useState } from \"react\";\n import { CardBody,Card } from 'reactstrap';\n\n \n import {Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer} from 'react-leaflet';\nimport service from './services';\nimport { Link } from \"react-router-dom\";\n// class Index extends React.Component {\n// state = {\n//     markers: []\n// }\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             lat: 51.505,\n//             lng: -0.09,\n//             zoom: 13,\n//           };\n       \n//     //     this.state = {\n//     //         style: {\n//     //             backgroundImage: `url(${require('../../../assets/images/page-img/33.png')})`,\n//     //             backgroundSize: 'cover',\n//     //             height: \"423px\"\n//     //         }\n//     //     };\n//     //     this.sayHello = this.sayHello.bind(this);\n//     // }\n//     // sayHello() {\n//     //     this.props.history.push('/dashboard1');\n//     //   }\n// }\n//     componentDidMount() {\n        \n//         const baseUrl = axios.get(`http://localhost:3010/data`)\n//         const getAll = () =>{\n//             const request = axios.get(baseUrl)\n//             return request.then(response => response.data)\n//         }\n      \n//         this.refno=window.location.pathname.replace('/Detail/','');\n        \n//         setTimeout(function () {\n//             index();\n//         }, 800);\n//         document.getElementById('body').className = 'sidebar-main-active right-column-fixed header-top-bgcolor'\n//     }\n//     componentWillUnmount() {\n//         document.getElementById('body').className = ''\n//     }\n//     render() {\n//         const position = [this.state.lat, this.state.lng];\n//         return (\n//             <>\n//             <Card >\n//             <CardBody>\n\n\n\n\n\n//                             <div>\n//                                 {this.state.markers.filter(item => item.refnum===this.refno).map(filteredName => (\n//                                     <div>\n//                                      <h1 className=\"display-8\">#{filteredName.refnum}-{filteredName.description}</h1>\n//                                      <h1 className=\"display-9\">{filteredName.street}   {filteredName.Apartment} {filteredName.doornum} {filteredName.region} {filteredName.country}</h1>\n//                                      </div>\n\n\n\n\n//                                 ))}\n//                                 </div>\n//                                 <div>\n//                                 {this.state.markers.filter(item => item.refnum===this.refno).map(filteredName => (\n//                                     <div>\n//                                 <MapContainer\n//                                             style={ { height: \"500px\", width: \"100%\"}}\n                                            \n//                                             center={[filteredName.latitude, filteredName.longitude]} zoom={18} maxZoom={100}\n                                            \n//                                         >\n    \n//                                                 <TileLayer\n//                                             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                                             attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n//                                             />\n\n//                                     <Polygon positions={filteredName.boundaries} color='red'\n//                                      />\n    \n    \n//                                      </MapContainer>\n//                                      </div>\n//                                 ))\n//                                 }\n//                                 </div>\n//             </CardBody>\n//             </Card>\n//             </>\n//         );\n//     }\n// }\n\n\nconst FloorMap  = () => {\n  \n    \n\n    const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n\n\n\n     const refno=window.location.pathname.replace('/FloorMap/','');\n      \nconsole.log(refno)\n      \n      \n\n      \n     \n \nfunction renderPopup (item){\n  \n    return (\n      \n      <Popup\n        \n      >\n         \n        <Link  to={item.link} >{item.description}</Link>\n      </Popup>\n      \n    );\n  }\n\n   \n  return (\n\n    <Card >\n    <CardBody>\n    <MapContainer\n                                            style={ { height: \"500px\", width: \"100%\"}}\n                                            \n                                            center={[60.21679719545689, 24.810291821854594]} zoom={12} maxZoom={100}\n                                            \n                                        >\n    \n                                                <TileLayer\n                                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                            />\n                            \n                                {\n                                    markers.map((item, index) => (\n                                       \n                                        <Marker   \n                                                position={[item.latitude,item.longitude]}\n                                                onMouseOver={(e) => {\n                                                    e.target.openPopup();\n                                                  }}\n                                                  onMouseOut={(e) => {\n                                                    e.target.closePopup();\n                                                  }}\n                                                >\n                                                          {renderPopup(item) }\n                                                </Marker>\n                                    ))\n                                }\n\n      \n    \n    \n                                     </MapContainer>\n\n{/* \n\n\n                    <div>\n                        {markers.filter(item => item.refnum===refno).map(filteredName => (\n                            <div>\n                             <h1 className=\"display-8\">#{filteredName.refnum}-{filteredName.description}</h1>\n                             <h1 className=\"display-9\">{filteredName.street}   {filteredName.Apartment} {filteredName.doornum} {filteredName.region} {filteredName.country}</h1>\n                             </div>\n\n\n\n\n                        ))}\n                        </div>\n                        <div>\n                        {markers.filter(item => item.refnum===refno).map(filteredName => (\n                            <div>\n                        <MapContainer\n                                    style={ { height: \"500px\", width: \"100%\"}}\n                                    \n                                    center={[filteredName.latitude, filteredName.longitude]} zoom={18} maxZoom={100}\n                                    \n                                >\n\n                                        <TileLayer\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                    />\n\n                            <Polygon positions={filteredName.boundaries} color='red'\n                             />\n\n\n                             </MapContainer> */}\n                             {/* </div>\n                        ))\n                        }\n                        </div> */}\n    </CardBody>\n    </Card>  \n\n  );\n}\n\nexport default FloorMap;\n"]},"metadata":{},"sourceType":"module"}