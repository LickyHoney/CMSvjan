{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/*import React from \"react\"\n\nconst DisplayEntry = ({ name }) => {\n    return(\n        <div>\n            {name} \n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries*/\nimport React, { useState, useEffect } from \"react\";\nimport service from \"./services.js\";\nimport { Row, Col, Table, Card, CardBody } from 'reactstrap';\nimport { Grid, TableHeaderRow, TableEditColumn, TableInlineCellEditing } from '@devexpress/dx-react-grid-bootstrap4';\nimport { Link } from \"react-router-dom\";\n\nvar getRowId = function getRowId(row) {\n  return row.id;\n};\n\nvar DisplayEntry = function DisplayEntry(_ref) {\n  _s();\n\n  var name = _ref.name,\n      street = _ref.street,\n      apartment = _ref.apartment,\n      doorno = _ref.doorno,\n      region = _ref.region,\n      country = _ref.country,\n      id = _ref.id;\n\n  var _useState = useState(name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name1 = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(street),\n      _useState4 = _slicedToArray(_useState3, 2),\n      street1 = _useState4[0],\n      setStreet = _useState4[1];\n\n  var _useState5 = useState(apartment),\n      _useState6 = _slicedToArray(_useState5, 2),\n      apartment1 = _useState6[0],\n      setApartment = _useState6[1];\n\n  var _useState7 = useState(doorno),\n      _useState8 = _slicedToArray(_useState7, 2),\n      doorno1 = _useState8[0],\n      setDoorno = _useState8[1];\n\n  var _useState9 = useState(region),\n      _useState10 = _slicedToArray(_useState9, 2),\n      region1 = _useState10[0],\n      setRegion = _useState10[1];\n\n  var _useState11 = useState(country),\n      _useState12 = _slicedToArray(_useState11, 2),\n      country1 = _useState12[0],\n      setCountry = _useState12[1]; //  const [ newNumber, setNumber ] = useState(number)\n\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      buttonVal = _useState14[0],\n      setButtonVal = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      markers = _useState16[0],\n      setMarkers = _useState16[1];\n\n  useEffect(function () {\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      setMarkers(latlng);\n    });\n  }, []); // const [columns] = useState([\n  //     {\n  //         title: \"Name\",\n  //         name: \"name\",\n  //     },\n  //     {\n  //         title: \"Lat\",\n  //         name: \"lat\",\n  //         sortable: true,\n  //     },\n  //     {\n  //         title: \"Lng\",\n  //         name: \"lng\",\n  //         sortable: true,\n  //     },\n  // ]);\n  // const [rows, setRows] = useState([\n  //     {newName},\n  //     {newLat},\n  //     {newLng}\n  // ]);\n  // const [editingCells, setEditingCells] = useState([]);\n  // const deleteHandler = (id) =>{\n  //     const handler = () =>{\n  //         if(window.confirm(`Do you really want to delete ${name}\\'s Building details?`)){\n  //             service.deletion(id)\n  //             .then(response => {\n  //                 setName(\"\")\n  //                 setStreet(\"\")\n  //                 setApartment(\"\")\n  //               setDoorno(\"\")\n  //               setRegion(\"\")\n  //               setCountry(\"\")\n  //             setButtonVal(\"\")\n  //             })\n  //         }\n  //     }\n  //     return handler\n  // }\n\n  var deleteHandler = function deleteHandler(id) {\n    var handler = function handler() {\n      if (window.confirm(\"Do you really want to delete \".concat(name, \"'s Building details?\"))) {\n        service.deletion(id).then(function (response) {\n          setMarkers(markers.filter(function (marker) {\n            return marker.id !== id;\n          }));\n          console.log(response.data);\n        });\n      }\n    };\n\n    return handler;\n  };\n\n  useEffect(function () {\n    // setButtonVal(<button onClick={deleteHandler(id)}>delete</button>)\n    setButtonVal( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return deleteHandler(markers.refnum);\n      },\n      className: \"button muted-button\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 22\n    }, _this));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      hover: true,\n      className: \"table\",\n      items: markers,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 10\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 10\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 10\n          }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 10\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 4\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: markers.map(function (item, index) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [item.refnum, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 45\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: item.link,\n                className: \"nav-link font-weight-bold \",\n                children: [name1, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 49\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 44\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [street1, \"   \", apartment1, \" \", doorno1, \" \", region1, \" \", country1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 45\n            }, _this), buttonVal]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 41\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 4\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DisplayEntry, \"d5NGgzGkSD5NxGJp3me5Y87xqJc=\");\n\n_c = DisplayEntry;\n\nvar DisplayEntries = function DisplayEntries(_ref2) {\n  var names = _ref2.names,\n      regVal = _ref2.regVal;\n  var regExp = new RegExp(regVal, \"i\");\n  var filteredArray = names.filter(function (entry) {\n    return regExp.test(entry.name);\n  });\n  var namesArray = filteredArray.map(function (entry) {\n    return /*#__PURE__*/_jsxDEV(DisplayEntry, {\n      name: entry.description,\n      street: entry.street,\n      apartment: entry.Apartment,\n      doorno: entry.doornum,\n      region: entry.region,\n      country: entry.country,\n      id: entry.refnum\n    }, entry.refnum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 53\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: namesArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = DisplayEntries;\nexport default DisplayEntries;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplayEntry\");\n$RefreshReg$(_c2, \"DisplayEntries\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js"],"names":["React","useState","useEffect","service","Row","Col","Table","Card","CardBody","Grid","TableHeaderRow","TableEditColumn","TableInlineCellEditing","Link","getRowId","row","id","DisplayEntry","name","street","apartment","doorno","region","country","name1","setName","street1","setStreet","apartment1","setApartment","doorno1","setDoorno","region1","setRegion","country1","setCountry","buttonVal","setButtonVal","markers","setMarkers","getAll","then","latlng","console","log","deleteHandler","handler","window","confirm","deletion","response","filter","marker","data","refnum","map","item","index","link","DisplayEntries","names","regVal","regExp","RegExp","filteredArray","entry","test","namesArray","description","Apartment","doornum"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,GAAR,EAAaC,GAAb,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,QAA/B,QAA8C,YAA9C;AACA,SAASC,IAAT,EAAgBC,cAAhB,EAAgCC,eAAhC,EAAiDC,sBAAjD,QAA+E,sCAA/E;AACA,SAASC,IAAT,QAAqB,kBAArB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,EAAR;AAAA,CAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA6D;AAAA;;AAAA,MAA1DC,IAA0D,QAA1DA,IAA0D;AAAA,MAApDC,MAAoD,QAApDA,MAAoD;AAAA,MAA5CC,SAA4C,QAA5CA,SAA4C;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,MAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,MAATP,EAAS,QAATA,EAAS;;AAAA,kBACnDf,QAAQ,CAACiB,IAAD,CAD2C;AAAA;AAAA,MACtEM,KADsE;AAAA,MAC/DC,OAD+D;;AAAA,mBAEhDxB,QAAQ,CAACkB,MAAD,CAFwC;AAAA;AAAA,MAEtEO,OAFsE;AAAA,MAE7DC,SAF6D;;AAAA,mBAG1C1B,QAAQ,CAACmB,SAAD,CAHkC;AAAA;AAAA,MAGtEQ,UAHsE;AAAA,MAG1DC,YAH0D;;AAAA,mBAIhD5B,QAAQ,CAACoB,MAAD,CAJwC;AAAA;AAAA,MAItES,OAJsE;AAAA,MAI7DC,SAJ6D;;AAAA,mBAKhD9B,QAAQ,CAACqB,MAAD,CALwC;AAAA;AAAA,MAKtEU,OALsE;AAAA,MAK7DC,SAL6D;;AAAA,oBAM9ChC,QAAQ,CAACsB,OAAD,CANsC;AAAA;AAAA,MAMtEW,QANsE;AAAA,MAM5DC,UAN4D,mBAOhF;;;AAPgF,oBAQ1ClC,QAAQ,CAAC,EAAD,CARkC;AAAA;AAAA,MAQtEmC,SARsE;AAAA,MAQ3DC,YAR2D;;AAAA,oBAShDpC,QAAQ,CAAC,EAAD,CATwC;AAAA;AAAA,MASvEqC,OATuE;AAAA,MAS9DC,UAT8D;;AAY5ErC,EAAAA,SAAS,CAAC,YAAI;AACZC,IAAAA,OAAO,CACNqC,MADD,GAECC,IAFD,CAEM,UAAAC,MAAM,EAAG;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACAH,MAAAA,UAAU,CAACG,MAAD,CAAV;AACD,KALD;AAMD,GAPQ,EAOP,EAPO,CAAT,CAZ4E,CAqB9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAC7B,EAAD,EAAQ;AAC1B,QAAM8B,OAAO,GAAG,SAAVA,OAAU,GAAK;AACV,UAAGC,MAAM,CAACC,OAAP,wCAA+C9B,IAA/C,0BAAH,EAA+E;AAE1Ff,QAAAA,OAAO,CACN8C,QADD,CACUjC,EADV,EAEGyB,IAFH,CAEQ,UAAAS,QAAQ,EAAI;AAChBX,UAAAA,UAAU,CAACD,OAAO,CAACa,MAAR,CAAe,UAACC,MAAD;AAAA,mBAAYA,MAAM,CAACpC,EAAP,KAAcA,EAA1B;AAAA,WAAf,CAAD,CAAV;AACA2B,UAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACG,IAArB;AAED,SANH;AAOC;AACJ,KAXG;;AAYJ,WAAOP,OAAP;AAEG,GAfH;;AAiBA5C,EAAAA,SAAS,CAAC,YAAI;AACV;AACAmC,IAAAA,YAAY,eAAC;AACT,MAAA,OAAO,EAAE;AAAA,eAAMQ,aAAa,CAACP,OAAO,CAACgB,MAAT,CAAnB;AAAA,OADA;AAET,MAAA,SAAS,EAAC,qBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,CAAZ;AAMH,GARQ,EAST,EATS,CAAT;AAWA,sBAEI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,SAAS,EAAC,OAAvB;AAA+B,MAAA,KAAK,EAAEhB,OAAtC;AAAA,8BACT;AAAA,+BACG;AAAA,kCACG;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADH,eAEG;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFH,eAGG;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHH,eAIG;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,eADS,eAUT;AAAA,kBAGiCA,OAAO,CAACiB,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA,8BAER;AAAA,oCACI;AAAA,yBAAMD,IAAI,CAACF,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEG;AAAA,2CAAK,QAAC,IAAD;AAAQ,gBAAA,EAAE,EAAEE,IAAI,CAACE,IAAjB;AAAuB,gBAAA,SAAS,EAAC,4BAAjC;AAAA,2BAA+DlC,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFH,eAGI;AAAA,yBAAME,OAAN,SAAkBE,UAAlB,OAA+BE,OAA/B,OAAyCE,OAAzC,OAAmDE,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAIKE,SAJL;AAAA,aAASqB,KAAT;AAAA;AAAA;AAAA;AAAA,mBAFQ;AAAA,SAAZ;AAHjC;AAAA;AAAA;AAAA;AAAA,eAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WAFJ;AAwDH,CAnJD;;GAAMxC,Y;;KAAAA,Y;;AAqJN,IAAM0C,cAAc,GAAG,SAAjBA,cAAiB,QAAuB;AAAA,MAApBC,KAAoB,SAApBA,KAAoB;AAAA,MAAbC,MAAa,SAAbA,MAAa;AAC1C,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWF,MAAX,EAAmB,GAAnB,CAAf;AACA,MAAMG,aAAa,GAAGJ,KAAK,CAACT,MAAN,CAAa,UAACc,KAAD;AAAA,WAAWH,MAAM,CAACI,IAAP,CAAYD,KAAK,CAAC/C,IAAlB,CAAX;AAAA,GAAb,CAAtB;AACA,MAAMiD,UAAU,GAAGH,aAAa,CAACT,GAAd,CAAkB,UAACU,KAAD;AAAA,wBAAW,QAAC,YAAD;AAAiC,MAAA,IAAI,EAAEA,KAAK,CAACG,WAA7C;AAA0D,MAAA,MAAM,EAAEH,KAAK,CAAC9C,MAAxE;AAAgF,MAAA,SAAS,EAAE8C,KAAK,CAACI,SAAjG;AAA4G,MAAA,MAAM,EAAEJ,KAAK,CAACK,OAA1H;AAAmI,MAAA,MAAM,EAAEL,KAAK,CAAC3C,MAAjJ;AAAyJ,MAAA,OAAO,EAAE2C,KAAK,CAAC1C,OAAxK;AAAiL,MAAA,EAAE,EAAE0C,KAAK,CAACX;AAA3L,OAAmBW,KAAK,CAACX,MAAzB;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,GAAlB,CAAnB;AAEA,sBACA;AAAA,cACKa;AADL;AAAA;AAAA;AAAA;AAAA,WADA;AAKH,CAVD;;MAAMR,c;AAYN,eAAeA,cAAf","sourcesContent":["/*import React from \"react\"\n\nconst DisplayEntry = ({ name }) => {\n    return(\n        <div>\n            {name} \n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries*/\n\nimport React, {useState, useEffect} from \"react\"\nimport service from \"./services.js\"\nimport {Row, Col, Table, Card, CardBody} from 'reactstrap';\nimport { Grid,  TableHeaderRow, TableEditColumn, TableInlineCellEditing } from '@devexpress/dx-react-grid-bootstrap4';\nimport { Link } from \"react-router-dom\";\nconst getRowId = row => row.id;\n\nconst DisplayEntry = ({ name, street, apartment,doorno, region, country, id }) => {\n    const [ name1, setName ] = useState(name)\n    const [ street1, setStreet] = useState(street)\n    const [ apartment1, setApartment] = useState(apartment)\n    const [ doorno1, setDoorno] = useState(doorno)\n    const [ region1, setRegion] = useState(region)\n    const [ country1, setCountry] = useState(country)\n  //  const [ newNumber, setNumber ] = useState(number)\n    const [ buttonVal, setButtonVal ] = useState(\"\")\n    const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n\n    // const [columns] = useState([\n    //     {\n    //         title: \"Name\",\n    //         name: \"name\",\n    //     },\n    //     {\n    //         title: \"Lat\",\n    //         name: \"lat\",\n    //         sortable: true,\n    //     },\n    //     {\n    //         title: \"Lng\",\n    //         name: \"lng\",\n    //         sortable: true,\n    //     },\n    // ]);\n    // const [rows, setRows] = useState([\n    //     {newName},\n    //     {newLat},\n    //     {newLng}\n        \n    // ]);\n    // const [editingCells, setEditingCells] = useState([]);\n\n    // const deleteHandler = (id) =>{\n    //     const handler = () =>{\n    //         if(window.confirm(`Do you really want to delete ${name}\\'s Building details?`)){\n    //             service.deletion(id)\n    //             .then(response => {\n                    \n    //                 setName(\"\")\n    //                 setStreet(\"\")\n    //                 setApartment(\"\")\n    //               setDoorno(\"\")\n    //               setRegion(\"\")\n    //               setCountry(\"\")\n    //             setButtonVal(\"\")\n    //             })\n    //         }\n    //     }\n    //     return handler\n    // }\n    const deleteHandler = (id) => {\n        const handler = () =>{\n                   if(window.confirm(`Do you really want to delete ${name}\\'s Building details?`)){\n  \n        service\n        .deletion(id)\n          .then(response => {\n            setMarkers(markers.filter((marker) => marker.id !== id))\n            console.log(response.data);\n            \n          })\n        }\n    }\n    return handler\n          \n      };\n\n    useEffect(()=>{\n        // setButtonVal(<button onClick={deleteHandler(id)}>delete</button>)\n        setButtonVal(<button\n            onClick={() => deleteHandler(markers.refnum)}\n            className=\"button muted-button\"\n          >\n            Delete\n          </button>)\n    },\n    [])\n\n    return(\n       \n        <div>\n            <Table hover className=\"table\" items={markers}>\n   <thead>\n      <tr>\n         <th scope=\"col\">#</th>\n         <th scope=\"col\">Name</th>\n         <th scope=\"col\">Address</th>\n         <th scope=\"col\">Delete</th>\n         \n      </tr>\n   </thead>\n   <tbody>\n     \n                                {\n                                    markers.map((item, index) => (\n                                       \n                                        <tr key={index}>\n                                            <td >{item.refnum} </td>\n                                           <td> <Link   to={item.link} className=\"nav-link font-weight-bold \">{name1} </Link></td>\n                                            <td >{street1}   {apartment1} {doorno1} {region1} {country1}</td>\n                                            {buttonVal} \n\n                                        </tr>\n                                    ))\n                                }\n\n\n   </tbody>\n   </Table>\n            {/* {newName}\n            {newLat}\n            {newLng}\n            {buttonVal} */}\n           \n\n            {/* <Table className=\"table\" items={{DisplayEntries}}>   \n      <thead>\n    \n    <th>Name</th>\n    <th>Lat</th>\n    <th>Lng</th>\n  \n          </thead>          \n \n<tbody>\n \n  <tr>\n    \n  </tr>\n  </tbody>\n  </Table> */}\n\n        </div> \n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.refnum} name={entry.description} street={entry.street} apartment={entry.Apartment} doorno={entry.doornum} region={entry.region} country={entry.country} id={entry.refnum} />)\n    \n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries"]},"metadata":{},"sourceType":"module"}