{"ast":null,"code":"import _classCallCheck from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/Map1.js\";\n// import React, { useEffect, useState } from \"react\";\n// import DisplayEntries from \"./DisplayEntries\"\n// import service from \"./services.js\";\n// import { Polygon, Popup, Rectangle, Marker, TileLayer } from \"react-leaflet\";\n// import {MapContainer } from \"react-leaflet\";\n// import { Card, CardBody, Col, Row } from \"reactstrap\";\n// import {Nav,NavItem,NavLink,TabContent,TabPane} from 'reactstrap';\n// import Tabs from \"./Tabs\";\n// import PropTypes from \"prop-types\";\n// import DashBoard from \"./Dashboard\";\n// //import icon from \"./icon_building.png\";\n// import { Icon } from \"leaflet\";\n// const Map1  = () => {\n//     const [markers, setMarkers] = useState([])\n//       const [ newLat, setNewLat ] = useState('')\n//       const [ newLng, setNewLng ] = useState('')\n//       const [ newName, setNewName ] = useState('')\n//       const [newFilter, setNewFilter] = useState('')\n//       useEffect(()=>{\n//         service\n//         .getAll()\n//         .then(latlng =>{\n//           console.log(\"returning\", latlng)\n//           setMarkers(latlng)\n//         })\n//       },[])\n//       const kids = [\n//         [60.23296, 24.83034],\n//         [60.23299, 24.83039],\n//         [60.23302, 24.83031],\n//         [60.23299, 24.83026]\n//       ]\n//       const br = [\n//         [60.23299, 24.83026],\n//         [60.23301, 24.83029],\n//         [60.23303, 24.83024],\n//         [60.23301, 24.83022]\n//       ]\n//       const tv = [\n//         [60.23301, 24.83030],\n//         [60.23304, 24.83035],\n//         [60.23306, 24.83030],\n//         [60.23303, 24.83025]\n//       ]\n//       const wc = [\n//         [60.23303, 24.83040],\n//         [60.23304, 24.83042],\n//         [60.23305, 24.83039],\n//         [60.23303, 24.83038]\n//       ]\n//       const Corridar = [\n//         [60.23299, 24.83040],\n//         [60.23301, 24.83043],\n//         [60.23303, 24.83037],\n//         [60.23302, 24.83034],\n//       ]\n//       const Kitchen = [\n//         [60.23304, 24.83035],\n//         [60.23306, 24.83038],\n//         [60.23308, 24.83033],\n//         [60.23306, 24.83030]\n//       ]\n//   const changeHandler = (event) => setNewLat(event.target.value)\n//   const changeHandler1 = (event) => setNewLng(event.target.value)\n//   const changeHandler2= (event) => setNewName(event.target.value)\n//   const changeHandlerFilter = (event) => setNewFilter(event.target.value)\n//         const position = [60.21749913, 24.938379];\n//         const position1 = [60.21749913, 24.806496774]\n//         console.log(position)\n//       const submitHandler = (event) => {\n//         event.preventDefault()\n//        service\n//         .getAll()\n//         .then(latlng =>{\n//           const allMarkers = [...latlng]\n//           const newMarker = {\n//             id:markers.length + 1,\n//             lat:parseFloat(newLat),\n//             lng:parseFloat(newLng),\n//             name:newName\n//           }\n//            service\n//             .update(newMarker)\n//             .then(newEntry =>{\n//                 setNewLat(\"\")\n//                 setNewLng(\"\")\n//                 setNewName(\"\")\n//               setMarkers(latlng.concat(newEntry))\n//             })\n//         })\n//     }\n//     function renderPopup (index){\n//       return (\n//         <Popup\n//           tipSize={5}\n//           anchor=\"bottom-right\"\n//           longitude={markers[index].lng}\n//           latitude={markers[index].lat}\n//         >\n//           <p>\n//              <button type=\"submit\" onClick={submitHandler}>{markers[index].name}</button> \n//             <br />\n//           </p>\n//         </Popup>\n//       );\n//     }\n//     const handleClick = (e) => {\n//       e.latlng()\n//     }\n//     const building = new Icon({\n//       iconUrl: \"./icon_building.svg\",\n//       iconSize: [25, 25]\n//     });\n//   return (\n//       <div>\n//          <div class = \"logout\">\n//   <DashBoard />\n//   </div>\n//         <Tabs>\n//           <div label = \"Details\">\n//           {/* <div class='split left'> */}\n//           <Card className=\"iq-card\">\n//                     <CardBody className=\"iq-card-body\"> \n//               <form>\n//                   <div>\n//                   <Row>\n//               <Col sm=\"4\">\n//                 Search for:\n//                 </Col>\n//                 <Col> <input onChange={changeHandlerFilter} value={newFilter} /><br/></Col></Row>\n//                 </div>\n//                 <div className=\"form-group\">\n//                 <h1>Add a Building</h1>\n//                 <Row>\n//               <Col sm=\"4\">\n//                 Lat: \n//                 </Col>\n//                 <Col>\n//                 <input onChange={changeHandler} value={newLat} /><br/></Col></Row>\n//                 <Row>\n//               <Col sm=\"4\">\n//                 Lng: \n//                 </Col>\n//                 <Col><input onChange={changeHandler1} value={newLng} /><br/></Col></Row>\n//                 <Row>\n//               <Col sm=\"4\">\n//                 Name: \n//                 </Col>\n//                 <Col><input onChange={changeHandler2} value={newName} /><br/></Col></Row>\n//                 </div>\n//               </form>\n//               <div>\n//     <button type=\"submit\" onClick={submitHandler} className=\"btn btn-primary float-left\">Add</button><br/>\n//   </div>\n//    </CardBody>\n// </Card>\n//             <br/><br/>\n//             <div class='position'>\n//           <h3>Available List of Buildings</h3>\n//           <DisplayEntries names={markers} regVal={newFilter} />\n//          </div>\n//          {/* </CardBody>\n// </Card> */}\n//           </div>\n//           {/* <div class='split right'> */}\n//           {/* <Card className=\"iq-card\">\n//                     <CardBody className=\"iq-card-body\"></CardBody> */}\n//           <div label='MapView'>\n//           {/* <Row>\n//           <Col sm=\"12\">\n//               <Card className=\"iq-card\">\n//           <CardBody className=\"iq-card-body\"> */}\n//           <MapContainer\n//     style={ { height: \"500px\", width: \"100%\"}}\n//     center={position1} zoom={12} maxZoom={100}\n//     center={[60.2330141, 24.8302054]} zoom={12} maxZoom={100}\n//     onClick={handleClick}\n//   >\n//     <Polygon positions={[[60.218228, 24.811606],[60.218358, 24.811976],[ 60.218348, 24.812711],[60.217940, 24.811874]]} color='red' />\n//     <TileLayer\n//   url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//   attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n// />\n// <Rectangle\n//     bounds={wc}\n//     color={'yellow'}\n//    />\n//  <Rectangle\n//     bounds={kids}\n//     color={'red'}\n//    />\n// <Rectangle\n//     bounds={br}\n//     color={'pink'}\n//    />\n// <Rectangle\n//     bounds={tv}\n//     color={'purple'}\n//    />\n//   <Rectangle\n//     bounds={Corridar}\n//     color={'blue'}\n//    />\n// <Rectangle\n//     bounds={Kitchen}\n//     color={'orange'}\n//    />\n//     {markers.map((marker, index) => {\n//         let post = [marker.latitude, marker.longitude];\n//       return (\n//         <Marker\n//           key={index}\n//           position={post}\n//         >\n//       {renderPopup(index) }\n//         </Marker>\n//       );\n//     })}\n//   </MapContainer>\n//   {/* </CardBody>\n//                   </Card>\n//           </Col>\n//       </Row>\n// */}\n//   </div>\n//   </Tabs>\n//   </div>\n//   );\n// }\n\n/* eslint-disable jsx-a11y/iframe-has-title */\n\n/* eslint-disable jsx-a11y/iframe-has-title */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table, Container, Col, Row } from \"reactstrap\";\nimport Login from \"../auth/Login\";\nimport service from \"./services\"; //import { index } from \"../../../../config/pluginsInit\";\n\nimport { Marker, TileLayer, Popup, MapContainer } from 'react-leaflet'; //import data from '../data/sampledata.json';\n\nfunction renderPopup(item) {\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: item.link,\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 7\n  }, this);\n} //const [markers, setMarkers] = []; \n\n\nvar Map1 = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map1, _React$Component);\n\n  var _super = _createSuper(Map1);\n\n  function Map1() {\n    var _this;\n\n    _classCallCheck(this, Map1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      markers: [],\n      setMarkers: []\n    };\n    return _this;\n  }\n\n  _createClass(Map1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.post = [60.21679719545689, 24.810291821854594];\n      service.getAll().then(function (latlng) {\n        console.log(\"returning\", latlng);\n        setMarkers(latlng);\n      }); // setTimeout(function () {\n      //     index();\n      // }, 800);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"logout\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"iq-example-row\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-4\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  hover: true,\n                  className: \"table\",\n                  items: markers,\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"#\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 10\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 10\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\",\n                        children: \"Address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 10\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        scope: \"col\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 374,\n                        columnNumber: 10\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 7\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 4\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: markers.map(function (item, index) {\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [item.refnum, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 45\n                        }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                            to: item.link,\n                            className: \"nav-link font-weight-bold \",\n                            children: [item.description, \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 384,\n                            columnNumber: 49\n                          }, _this2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 384,\n                          columnNumber: 44\n                        }, _this2), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [item.street, \"   \", item.Apartment, \" \", item.doornum, \" \", item.region, \" \", item.country]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 45\n                        }, _this2), /*#__PURE__*/_jsxDEV(Link, {\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 386,\n                          columnNumber: 45\n                        }, _this2)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 41\n                      }, _this2);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 4\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-8\",\n                children: /*#__PURE__*/_jsxDEV(MapContainer, {\n                  style: {\n                    height: \"500px\",\n                    width: \"100%\"\n                  },\n                  center: [60.21679719545689, 24.810291821854594],\n                  zoom: 12,\n                  maxZoom: 100,\n                  children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 49\n                  }, this), markers.map(function (item, index) {\n                    return /*#__PURE__*/_jsxDEV(Marker, {\n                      position: [item.latitude, item.longitude],\n                      onMouseOver: function onMouseOver(e) {\n                        e.target.openPopup();\n                      },\n                      onMouseOut: function onMouseOut(e) {\n                        e.target.closePopup();\n                      },\n                      children: renderPopup(item)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 41\n                    }, _this2);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true);\n    }\n  }]);\n\n  return Map1;\n}(React.Component);\n\nexport default Map1;","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/Map1.js"],"names":["React","Link","Table","Container","Col","Row","Login","service","Marker","TileLayer","Popup","MapContainer","renderPopup","item","link","description","Map1","state","markers","setMarkers","post","getAll","then","latlng","console","log","map","index","refnum","street","Apartment","doornum","region","country","height","width","latitude","longitude","e","target","openPopup","closePopup","Component"],"mappings":";;;;;;;AAAA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AAGA;AACA;;AAEA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA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","sourcesContent":["// import React, { useEffect, useState } from \"react\";\n\n\n\n// import DisplayEntries from \"./DisplayEntries\"\n// import service from \"./services.js\";\n\n// import { Polygon, Popup, Rectangle, Marker, TileLayer } from \"react-leaflet\";\n\n// import {MapContainer } from \"react-leaflet\";\n// import { Card, CardBody, Col, Row } from \"reactstrap\";\n// import {Nav,NavItem,NavLink,TabContent,TabPane} from 'reactstrap';\n// import Tabs from \"./Tabs\";\n// import PropTypes from \"prop-types\";\n// import DashBoard from \"./Dashboard\";\n// //import icon from \"./icon_building.png\";\n// import { Icon } from \"leaflet\";\n\n// const Map1  = () => {\n  \n    \n\n//     const [markers, setMarkers] = useState([])\n//       const [ newLat, setNewLat ] = useState('')\n//       const [ newLng, setNewLng ] = useState('')\n//       const [ newName, setNewName ] = useState('')\n//       const [newFilter, setNewFilter] = useState('')\n      \n\n//       useEffect(()=>{\n//         service\n//         .getAll()\n//         .then(latlng =>{\n//           console.log(\"returning\", latlng)\n//           setMarkers(latlng)\n//         })\n//       },[])\n\n\n\n   \n      \n\n      \n//       const kids = [\n//         [60.23296, 24.83034],\n//         [60.23299, 24.83039],\n//         [60.23302, 24.83031],\n//         [60.23299, 24.83026]\n        \n//       ]\n//       const br = [\n//         [60.23299, 24.83026],\n//         [60.23301, 24.83029],\n//         [60.23303, 24.83024],\n//         [60.23301, 24.83022]\n//       ]\n//       const tv = [\n//         [60.23301, 24.83030],\n//         [60.23304, 24.83035],\n//         [60.23306, 24.83030],\n//         [60.23303, 24.83025]\n//       ]\n//       const wc = [\n//         [60.23303, 24.83040],\n//         [60.23304, 24.83042],\n//         [60.23305, 24.83039],\n//         [60.23303, 24.83038]\n//       ]\n      \n      \n\n      \n//       const Corridar = [\n//         [60.23299, 24.83040],\n//         [60.23301, 24.83043],\n//         [60.23303, 24.83037],\n//         [60.23302, 24.83034],\n//       ]\n//       const Kitchen = [\n//         [60.23304, 24.83035],\n//         [60.23306, 24.83038],\n//         [60.23308, 24.83033],\n//         [60.23306, 24.83030]\n//       ]\n//   const changeHandler = (event) => setNewLat(event.target.value)\n//   const changeHandler1 = (event) => setNewLng(event.target.value)\n//   const changeHandler2= (event) => setNewName(event.target.value)\n//   const changeHandlerFilter = (event) => setNewFilter(event.target.value)\n      \n  \n\n//         const position = [60.21749913, 24.938379];\n//         const position1 = [60.21749913, 24.806496774]\n//         console.log(position)\n       \n//       const submitHandler = (event) => {\n//         event.preventDefault()\n//        service\n//         .getAll()\n//         .then(latlng =>{\n//           const allMarkers = [...latlng]\n\n//           const newMarker = {\n//             id:markers.length + 1,\n//             lat:parseFloat(newLat),\n//             lng:parseFloat(newLng),\n//             name:newName\n//           }\n//            service\n//             .update(newMarker)\n//             .then(newEntry =>{\n//                 setNewLat(\"\")\n//                 setNewLng(\"\")\n//                 setNewName(\"\")\n//               setMarkers(latlng.concat(newEntry))\n//             })\n\n//         })\n//     }\n//     function renderPopup (index){\n//       return (\n        \n//         <Popup\n//           tipSize={5}\n//           anchor=\"bottom-right\"\n//           longitude={markers[index].lng}\n//           latitude={markers[index].lat}\n//         >\n//           <p>\n//              <button type=\"submit\" onClick={submitHandler}>{markers[index].name}</button> \n//             <br />\n            \n         \n            \n//           </p>\n//         </Popup>\n        \n//       );\n//     }\n//     const handleClick = (e) => {\n//       e.latlng()\n//     }\n  \n//     const building = new Icon({\n//       iconUrl: \"./icon_building.svg\",\n//       iconSize: [25, 25]\n//     });\n//   return (\n//       <div>\n//          <div class = \"logout\">\n//   <DashBoard />\n//   </div>\n  \n//         <Tabs>\n//           <div label = \"Details\">\n//           {/* <div class='split left'> */}\n            \n//           <Card className=\"iq-card\">\n//                     <CardBody className=\"iq-card-body\"> \n\n//               <form>\n              \n//                   <div>\n//                   <Row>\n//               <Col sm=\"4\">\n//                 Search for:\n//                 </Col>\n//                 <Col> <input onChange={changeHandlerFilter} value={newFilter} /><br/></Col></Row>\n//                 </div>\n//                 <div className=\"form-group\">\n              \n                \n//                 <h1>Add a Building</h1>\n//                 <Row>\n//               <Col sm=\"4\">\n//                 Lat: \n//                 </Col>\n//                 <Col>\n//                 <input onChange={changeHandler} value={newLat} /><br/></Col></Row>\n//                 <Row>\n//               <Col sm=\"4\">\n//                 Lng: \n//                 </Col>\n//                 <Col><input onChange={changeHandler1} value={newLng} /><br/></Col></Row>\n//                 <Row>\n//               <Col sm=\"4\">\n//                 Name: \n//                 </Col>\n//                 <Col><input onChange={changeHandler2} value={newName} /><br/></Col></Row>\n//                 </div>\n\n//               </form>\n              \n//               <div>\n//     <button type=\"submit\" onClick={submitHandler} className=\"btn btn-primary float-left\">Add</button><br/>\n\n\n//   </div>\n//    </CardBody>\n// </Card>\n//             <br/><br/>\n//             <div class='position'>\n\n//           <h3>Available List of Buildings</h3>\n          \n//           <DisplayEntries names={markers} regVal={newFilter} />\n\n//          </div>\n//          {/* </CardBody>\n// </Card> */}\n         \n//           </div>\n          \n\n\n         \n//           {/* <div class='split right'> */}\n//           {/* <Card className=\"iq-card\">\n//                     <CardBody className=\"iq-card-body\"></CardBody> */}\n//           <div label='MapView'>\n//           {/* <Row>\n//           <Col sm=\"12\">\n//               <Card className=\"iq-card\">\n//           <CardBody className=\"iq-card-body\"> */}\n\n//           <MapContainer\n//     style={ { height: \"500px\", width: \"100%\"}}\n//     center={position1} zoom={12} maxZoom={100}\n//     center={[60.2330141, 24.8302054]} zoom={12} maxZoom={100}\n//     onClick={handleClick}\n//   >\n//     <Polygon positions={[[60.218228, 24.811606],[60.218358, 24.811976],[ 60.218348, 24.812711],[60.217940, 24.811874]]} color='red' />\n\n//     <TileLayer\n//   url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//   attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n// />\n\n// <Rectangle\n//     bounds={wc}\n//     color={'yellow'}\n//    />\n//  <Rectangle\n//     bounds={kids}\n//     color={'red'}\n//    />\n// <Rectangle\n//     bounds={br}\n//     color={'pink'}\n//    />\n// <Rectangle\n//     bounds={tv}\n//     color={'purple'}\n//    />\n\n//   <Rectangle\n//     bounds={Corridar}\n//     color={'blue'}\n//    />\n// <Rectangle\n//     bounds={Kitchen}\n//     color={'orange'}\n//    />\n\n\n\n\n//     {markers.map((marker, index) => {\n//         let post = [marker.latitude, marker.longitude];\n//       return (\n        \n//         <Marker\n//           key={index}\n//           position={post}\n         \n         \n          \n          \n//         >\n//       {renderPopup(index) }\n//         </Marker>\n        \n//       );\n      \n//     })}\n    \n//   </MapContainer>\n//   {/* </CardBody>\n//                   </Card>\n//           </Col>\n//       </Row>\n// */}\n \n\n//   </div>\n \n//   </Tabs>\n  \n  \n//   </div>\n          \n     \n//   );\n// }\n\n/* eslint-disable jsx-a11y/iframe-has-title */\n/* eslint-disable jsx-a11y/iframe-has-title */\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table, Container, Col, Row } from \"reactstrap\";\nimport Login from \"../auth/Login\";\nimport service from \"./services\";\n\n\n//import { index } from \"../../../../config/pluginsInit\";\n\nimport { Marker, TileLayer,Popup , MapContainer} from 'react-leaflet';\n//import data from '../data/sampledata.json';\nfunction renderPopup (item){\n  \n    return (\n      \n      <Popup\n        \n      >\n         \n        <Link  to={item.link} >{item.description}</Link>\n      </Popup>\n      \n    );\n  }\n  //const [markers, setMarkers] = []; \nclass Map1 extends React.Component {\n  state = {\n    markers: [],\n     setMarkers: []\n  }\n   \n    componentDidMount() {\nthis.post=[60.21679719545689, 24.810291821854594];\n\n  \n\nservice\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n        \n        // setTimeout(function () {\n        //     index();\n        // }, 800);\n    }\n   \n    render() {\n        return (\n            <>\n <div class = \"logout\">\n  <Login />\n  </div>\n<Row className=\"iq-example-row\">\n<Container>\n\n<Row className=\"row\">\n<Col className=\"col-4\">\n<Table hover className=\"table\" items={markers}>\n   <thead>\n      <tr>\n         <th scope=\"col\">#</th>\n         <th scope=\"col\">Name</th>\n         <th scope=\"col\">Address</th>\n         <th scope=\"col\"></th>\n         \n      </tr>\n   </thead>\n   <tbody>\n                                {\n                                    markers.map((item, index) => (\n                                       \n                                        <tr key={index}>\n                                            <td >{item.refnum} </td>\n                                           <td> <Link   to={item.link} className=\"nav-link font-weight-bold \">{item.description} </Link></td>\n                                            <td >{item.street}   {item.Apartment} {item.doornum} {item.region} {item.country}</td>\n                                            <Link>Delete</Link>\n                                        </tr>\n                                    ))\n                                }\n\n\n   </tbody>\n</Table>\n\n\n</Col>\n<Col className=\"col-8\">\n<MapContainer\n                                            style={ { height: \"500px\", width: \"100%\"}}\n                                            \n                                            center={[60.21679719545689, 24.810291821854594]} zoom={12} maxZoom={100}\n                                            \n                                        >\n    \n                                                <TileLayer\n                                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                            />\n                            \n                                {\n                                    markers.map((item, index) => (\n                                       \n                                        <Marker   \n                                                position={[item.latitude,item.longitude]}\n                                                onMouseOver={(e) => {\n                                                    e.target.openPopup();\n                                                  }}\n                                                  onMouseOut={(e) => {\n                                                    e.target.closePopup();\n                                                  }}\n                                                >\n                                                          {renderPopup(item) }\n                                                </Marker>\n                                    ))\n                                }\n\n      \n    \n    \n                                     </MapContainer>\n</Col>\n</Row>\n</Container>\n</Row>\n\n\n             \n            </>\n        )\n    }\n}\n\n\n\n\n\n\n export default Map1\n\n"]},"metadata":{},"sourceType":"module"}