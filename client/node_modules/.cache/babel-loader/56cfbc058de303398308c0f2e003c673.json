{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n//import React from 'react';\n//import { LayersControl as BaseLayersControl } from 'react-leaflet';\nimport { CardBody, Card, ButtonGroup, Button, ButtonToolbar, Form, FormGroup, Label, Input } from 'reactstrap';\nimport React, { useEffect, useState } from \"react\";\nimport { Polygon, Popup, Rectangle, Marker, TileLayer, MapContainer, LayersControl, LayerGroup } from 'react-leaflet';\nimport service from './services';\nimport Map1 from './Map1';\nimport { Link } from \"react-router-dom\";\n\nvar EditFloorMap = function EditFloorMap() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  useEffect(function () {\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      setMarkers(latlng);\n    });\n  }, []);\n  var refno = window.location.pathname.replace('/EditFloorMap/', '');\n  console.log(markers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: markers.filter(function (item) {\n        return item.id === refno;\n      }).map(function (filteredName) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.id,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.Apartment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.doornum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"exampleInputReadonly\",\n              children: \"Building Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 47\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"exampleInputReadonly\",\n              readOnly: \"\",\n              defaultValue: filteredName.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 47\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 47\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              style: {\n                height: \"500px\",\n                width: \"100%\"\n              },\n              center: [filteredName.latitude, filteredName.longitude],\n              zoom: 18,\n              maxZoom: 100,\n              children: /*#__PURE__*/_jsxDEV(LayersControl, {\n                position: \"topright\",\n                children: /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {\n                  checked: true,\n                  name: filteredName.name,\n                  children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n                    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 9\n                  }, _this), filteredName.floors.map(function (floor, index) {\n                    return /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n                      checked: true,\n                      name: floor.description,\n                      children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n                        children: [floor.boundaries.map(function (vertex, index) {\n                          return /*#__PURE__*/_jsxDEV(Marker, {\n                            position: vertex,\n                            children: /*#__PURE__*/_jsxDEV(Popup, {\n                              children: [\"delete\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 110,\n                                columnNumber: 24\n                              }, _this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 109,\n                              columnNumber: 17\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 108,\n                            columnNumber: 17\n                          }, _this);\n                        }), /*#__PURE__*/_jsxDEV(Polygon, {\n                          positions: floor.boundaries,\n                          color: floor.color\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 12\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 9\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 9\n                    }, _this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 1\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 1\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 45\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 45\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 45\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(EditFloorMap, \"aVe0o7Xd1RI2qqyy9XuFimi/3oU=\");\n\n_c = EditFloorMap;\nexport default EditFloorMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFloorMap\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js"],"names":["CardBody","Card","ButtonGroup","Button","ButtonToolbar","Form","FormGroup","Label","Input","React","useEffect","useState","Polygon","Popup","Rectangle","Marker","TileLayer","MapContainer","LayersControl","LayerGroup","service","Map1","Link","EditFloorMap","markers","setMarkers","getAll","then","latlng","console","log","refno","window","location","pathname","replace","filter","item","id","map","filteredName","description","street","Apartment","doornum","region","country","height","width","latitude","longitude","name","floors","floor","index","boundaries","vertex","color"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n //import React from 'react';\n //import { LayersControl as BaseLayersControl } from 'react-leaflet';\n import { CardBody,Card,ButtonGroup, Button,ButtonToolbar,Form,FormGroup,Label,Input } from 'reactstrap';\n import React, { useEffect, useState } from \"react\";\n \n import {Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer,LayersControl, LayerGroup} from 'react-leaflet';\nimport service from './services';\nimport Map1 from './Map1';\nimport { Link } from \"react-router-dom\";\n\n\nconst EditFloorMap  = () => {\n\n  const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n      const refno=window.location.pathname.replace('/EditFloorMap/','');\n      console.log(markers);\n      return(\n        <div>\n          <Form>\n\n        \n                          {markers.filter(item => item.id===refno).map(filteredName => (\n                                            <div>\n                                              \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.id} disabled/>\n                                              </FormGroup>\n                                             \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.description} />\n                                              </FormGroup>\n                                            \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.street} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.Apartment} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.doornum} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.region} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.country} />\n                                              </FormGroup>\n\n\n                                            <div>\n\n                                            <MapContainer\n                                    style={ { height: \"500px\", width: \"100%\"}}\n                                    \n                                    center={[filteredName.latitude, filteredName.longitude]} zoom={18} maxZoom={100}\n                                    \n                                >\n                                  \n\n                                        {/* <TileLayer\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                    /> */}\n\n<LayersControl position=\"topright\">\n<LayersControl.BaseLayer checked name={filteredName.name}>\n  \n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {filteredName.floors.map((floor, index) => (\n        <LayersControl.Overlay checked name={floor.description}>\n        <LayerGroup>\n          {floor.boundaries.map((vertex,index) => (\n\n                <Marker position={vertex} >\n                <Popup>\n                 delete<br />\n                </Popup>\n                </Marker>\n          ))\n\n          }\n          {<Polygon positions={floor.boundaries} color={floor.color}/> }\n        </LayerGroup>\n        </LayersControl.Overlay>\n      \n      ))}\n         {/* <Polygon positions={floor.boundaries} color={floor.color}\n                             />  */}\n      </LayersControl.BaseLayer>\n      \n      \n      \n{/* {filteredName.floors.map((floor, index) => (\n      \n))} */}\n      \n      </LayersControl>\n\n                                  \n\n\n                             </MapContainer> \n                                            </div>\n\n\n                                            </div>\n\n\n\n\n                                        ))}\n\n              </Form>\n\n        </div>\n      );\n}\n\n  \n   export default EditFloorMap;"]},"metadata":{},"sourceType":"module"}