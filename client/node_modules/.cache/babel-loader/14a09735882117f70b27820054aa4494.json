{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/*import React from \"react\"\n\nconst DisplayEntry = ({ name }) => {\n    return(\n        <div>\n            {name} \n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries*/\nimport React, { useState, useEffect } from \"react\";\nimport service from \"./services.js\";\n\nvar DisplayEntry = function DisplayEntry(_ref) {\n  _s();\n\n  var name = _ref.name,\n      id = _ref.id;\n\n  var _useState = useState(name),\n      _useState2 = _slicedToArray(_useState, 2),\n      newName = _useState2[0],\n      setName = _useState2[1]; //  const [ newNumber, setNumber ] = useState(number)\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buttonVal = _useState4[0],\n      setButtonVal = _useState4[1];\n\n  var deleteHandler = function deleteHandler(id) {\n    var handler = function handler() {\n      if (window.confirm(\"Do you reall want to delete \".concat(name, \"'s number?\"))) {\n        service.deletion(id).then(function (response) {\n          setName(\"\");\n          setButtonVal(\"\");\n        });\n      }\n    };\n\n    return handler;\n  };\n\n  useEffect(function () {\n    setButtonVal( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteHandler(id),\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }, _this));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [newName, buttonVal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DisplayEntry, \"TI5LDZTQXXbPHEUW0a8IPK5RwjU=\");\n\n_c = DisplayEntry;\n\nvar DisplayEntries = function DisplayEntries(_ref2) {\n  var names = _ref2.names,\n      regVal = _ref2.regVal;\n  var regExp = new RegExp(regVal, \"i\");\n  var filteredArray = names.filter(function (entry) {\n    return regExp.test(entry.name);\n  });\n  var namesArray = filteredArray.map(function (entry) {\n    return /*#__PURE__*/_jsxDEV(DisplayEntry, {\n      name: entry.name,\n      number: entry.number,\n      id: entry.id\n    }, entry.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 53\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: namesArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = DisplayEntries;\nexport default DisplayEntries;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplayEntry\");\n$RefreshReg$(_c2, \"DisplayEntries\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js"],"names":["React","useState","useEffect","service","DisplayEntry","name","id","newName","setName","buttonVal","setButtonVal","deleteHandler","handler","window","confirm","deletion","then","response","DisplayEntries","names","regVal","regExp","RegExp","filteredArray","filter","entry","test","namesArray","map","number"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA;;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACNL,QAAQ,CAACI,IAAD,CADF;AAAA;AAAA,MAC3BE,OAD2B;AAAA,MAClBC,OADkB,kBAErC;;;AAFqC,mBAGCP,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,MAG3BQ,SAH2B;AAAA,MAGhBC,YAHgB;;AAKnC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACL,EAAD,EAAO;AACzB,QAAMM,OAAO,GAAG,SAAVA,OAAU,GAAK;AACjB,UAAGC,MAAM,CAACC,OAAP,uCAA8CT,IAA9C,gBAAH,EAAoE;AAChEF,QAAAA,OAAO,CAACY,QAAR,CAAiBT,EAAjB,EACCU,IADD,CACM,UAAAC,QAAQ,EAAI;AAEdT,UAAAA,OAAO,CAAC,EAAD,CAAP;AAEAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,SAND;AAOH;AACJ,KAVD;;AAWA,WAAOE,OAAP;AACH,GAbD;;AAeAV,EAAAA,SAAS,CAAC,YAAI;AACVQ,IAAAA,YAAY,eAAC;AAAQ,MAAA,OAAO,EAAEC,aAAa,CAACL,EAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,CAAZ;AACH,GAFQ,EAGT,EAHS,CAAT;AAKA,sBACI;AAAA,eACKC,OADL,EAEKE,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CA/BD;;GAAML,Y;;KAAAA,Y;;AAiCN,IAAMc,cAAc,GAAG,SAAjBA,cAAiB,QAAuB;AAAA,MAApBC,KAAoB,SAApBA,KAAoB;AAAA,MAAbC,MAAa,SAAbA,MAAa;AAC1C,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWF,MAAX,EAAmB,GAAnB,CAAf;AACA,MAAMG,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAa,UAACC,KAAD;AAAA,WAAWJ,MAAM,CAACK,IAAP,CAAYD,KAAK,CAACpB,IAAlB,CAAX;AAAA,GAAb,CAAtB;AACA,MAAMsB,UAAU,GAAGJ,aAAa,CAACK,GAAd,CAAkB,UAACH,KAAD;AAAA,wBAAW,QAAC,YAAD;AAA6B,MAAA,IAAI,EAAEA,KAAK,CAACpB,IAAzC;AAA+C,MAAA,MAAM,EAAEoB,KAAK,CAACI,MAA7D;AAAqE,MAAA,EAAE,EAAEJ,KAAK,CAACnB;AAA/E,OAAmBmB,KAAK,CAACnB,EAAzB;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,GAAlB,CAAnB;AACA,sBACA;AAAA,cACKqB;AADL;AAAA;AAAA;AAAA;AAAA,WADA;AAKH,CATD;;MAAMT,c;AAWN,eAAeA,cAAf","sourcesContent":["/*import React from \"react\"\n\nconst DisplayEntry = ({ name }) => {\n    return(\n        <div>\n            {name} \n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries*/\n\nimport React, {useState, useEffect} from \"react\"\nimport service from \"./services.js\"\n\nconst DisplayEntry = ({ name, id }) => {\n    const [ newName, setName ] = useState(name)\n  //  const [ newNumber, setNumber ] = useState(number)\n    const [ buttonVal, setButtonVal ] = useState(\"\")\n\n    const deleteHandler = (id) =>{\n        const handler = () =>{\n            if(window.confirm(`Do you reall want to delete ${name}\\'s number?`)){\n                service.deletion(id)\n                .then(response => {\n                    \n                    setName(\"\")\n                    \n                    setButtonVal(\"\")\n                })\n            }\n        }\n        return handler\n    }\n\n    useEffect(()=>{\n        setButtonVal(<button onClick={deleteHandler(id)}>delete</button>)\n    },\n    [])\n\n    return(\n        <div>\n            {newName} \n            {buttonVal}\n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} number={entry.number} id={entry.id} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries"]},"metadata":{},"sourceType":"module"}