{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n//import React from 'react';\nimport { CardBody, Card, ButtonGroup, Button, ButtonToolbar, Overlay } from 'reactstrap';\nimport React, { useEffect, useState } from \"react\";\nimport { Polygon, Popup, Rectangle, Marker, TileLayer, MapContainer, LayerGroup } from 'react-leaflet';\nimport service from './services';\nimport Map1 from './Map1';\nimport { Link } from \"react-router-dom\";\n\nvar FloorMap = function FloorMap() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  useEffect(function () {\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      setMarkers(latlng);\n    });\n  }, []);\n  var refno = window.location.pathname.replace('/FloorMap/', '');\n\n  var handleClick = function handleClick(e) {\n    console.log(e.target.value);\n    debugger;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: markers.filter(function (item) {\n          return item.id === refno;\n        }).map(function (filteredName) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-9\",\n              children: [filteredName.street, \"   \", filteredName.Apartment, \" \", filteredName.doornum, \" \", filteredName.region, \" \", filteredName.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 30\n            }, _this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                className: \"mr-2\",\n                children: filteredName.floors.map(function (item2, index) {\n                  return /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"secondary\",\n                    \"data-key\": index,\n                    onClick: handleClick,\n                    children: [\" \", item2.description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 39\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 30\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 30\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: markers.filter(function (item) {\n          return item.id === refno;\n        }).map(function (filteredName) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              style: {\n                height: \"500px\",\n                width: \"100%\"\n              },\n              center: [filteredName.latitude, filteredName.longitude],\n              zoom: 18,\n              maxZoom: 100,\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, _this), filteredName.floors.map(function (floor, index) {\n                return (\n                  /*#__PURE__*/\n                  //           <Polygon positions={floor.boundaries} color={floor.color}\n                  //  /> \n                  _jsxDEV(Overlay, {\n                    name: floor.description,\n                    id: floor.floorno,\n                    children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n                      children: /*#__PURE__*/_jsxDEV(Polygon, {\n                        positions: floor.boundaries,\n                        color: floor.color\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 29\n                  }, _this)\n                );\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 26\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FloorMap, \"aVe0o7Xd1RI2qqyy9XuFimi/3oU=\");\n\n_c = FloorMap;\nexport default FloorMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"FloorMap\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js"],"names":["CardBody","Card","ButtonGroup","Button","ButtonToolbar","Overlay","React","useEffect","useState","Polygon","Popup","Rectangle","Marker","TileLayer","MapContainer","LayerGroup","service","Map1","Link","FloorMap","markers","setMarkers","getAll","then","latlng","console","log","refno","window","location","pathname","replace","handleClick","e","target","value","filter","item","id","map","filteredName","street","Apartment","doornum","region","country","floors","item2","index","description","height","width","latitude","longitude","floor","floorno","boundaries","color"],"mappings":";;;;;;;AAAA;AACC;AACA,SAASA,QAAT,EAAkBC,IAAlB,EAAuBC,WAAvB,EAAoCC,MAApC,EAA2CC,aAA3C,EAAyDC,OAAzD,QAAyE,YAAzE;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,SAA3C,EAAuDC,YAAvD,EAAoEC,UAApE,QAAqF,eAArF;AACD,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAIA,IAAMC,QAAQ,GAAI,SAAZA,QAAY,GAAM;AAAA;;AAAA,kBAIUX,QAAQ,CAAC,EAAD,CAJlB;AAAA;AAAA,MAIbY,OAJa;AAAA,MAIJC,UAJI;;AAOlBd,EAAAA,SAAS,CAAC,YAAI;AACZS,IAAAA,OAAO,CACNM,MADD,GAECC,IAFD,CAEM,UAAAC,MAAM,EAAG;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACAH,MAAAA,UAAU,CAACG,MAAD,CAAV;AACD,KALD;AAMD,GAPQ,EAOP,EAPO,CAAT;AAWD,MAAMG,KAAK,GAACC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,YAAjC,EAA8C,EAA9C,CAAZ;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,MAAF,CAASC,KAArB;AACD;AACD,GAHA;;AAaH,sBAEE,QAAC,IAAD;AAAA,2BACA,QAAC,QAAD;AAAA,8BAEJ;AAAA,kBAQyBf,OAAO,CAACgB,MAAR,CAAe,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAUX,KAAd;AAAA,SAAnB,EAAwCY,GAAxC,CAA4C,UAAAC,YAAY;AAAA,8BACrD;AAAA,oCAGC;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,yBAA2BA,YAAY,CAACC,MAAxC,SAAmDD,YAAY,CAACE,SAAhE,OAA4EF,YAAY,CAACG,OAAzF,OAAmGH,YAAY,CAACI,MAAhH,OAAyHJ,YAAY,CAACK,OAAtI;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHD,eAIC,QAAC,aAAD;AAAe,cAAA,SAAS,EAAC,MAAzB;AAAA,qCACA,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC,MAAvB;AAAA,0BACKL,YAAY,CAACM,MAAb,CAAoBP,GAApB,CAAwB,UAACQ,KAAD,EAAQC,KAAR;AAAA,sCAEpB,QAAC,MAAD;AAAQ,oBAAA,KAAK,EAAC,WAAd;AAA0B,gCAAUA,KAApC;AAEA,oBAAA,OAAO,EAAEhB,WAFT;AAAA,oCAEwBe,KAAK,CAACE,WAF9B;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFoB;AAAA,iBAAxB;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,qBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,mBADqD;AAAA,SAAxD;AARzB;AAAA;AAAA;AAAA;AAAA,eAFI,eAmCoB;AAAA,kBACC7B,OAAO,CAACgB,MAAR,CAAe,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAUX,KAAd;AAAA,SAAnB,EAAwCY,GAAxC,CAA4C,UAAAC,YAAY;AAAA,8BACrD;AAAA,mCACH,QAAC,YAAD;AACW,cAAA,KAAK,EAAG;AAAEU,gBAAAA,MAAM,EAAE,OAAV;AAAmBC,gBAAAA,KAAK,EAAE;AAA1B,eADnB;AAGW,cAAA,MAAM,EAAE,CAACX,YAAY,CAACY,QAAd,EAAwBZ,YAAY,CAACa,SAArC,CAHnB;AAGoE,cAAA,IAAI,EAAE,EAH1E;AAG8E,cAAA,OAAO,EAAE,GAHvF;AAAA,sCAOe,QAAC,SAAD;AACJ,gBAAA,GAAG,EAAC,oDADA;AAEJ,gBAAA,WAAW,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,uBAPf,EAWYb,YAAY,CAACM,MAAb,CAAoBP,GAApB,CAAwB,UAACe,KAAD,EAAQN,KAAR;AAAA;AAAA;AACjC;AACA;AACA,0BAAC,OAAD;AAAS,oBAAA,IAAI,EAAEM,KAAK,CAACL,WAArB;AAAkC,oBAAA,EAAE,EAAEK,KAAK,CAACC,OAA5C;AAAA,2CACA,QAAC,UAAD;AAAA,6CACA,QAAC,OAAD;AAAS,wBAAA,SAAS,EAAED,KAAK,CAACE,UAA1B;AAAsC,wBAAA,KAAK,EAAEF,KAAK,CAACG;AAAnD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAHiC;AAAA,eAAxB,CAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,mBADqD;AAAA,SAAxD;AADD;AAAA;AAAA;AAAA;AAAA,eAnCpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,WAFF;AA2ED,CA5GD;;GAAMtC,Q;;KAAAA,Q;AA8GN,eAAeA,QAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n //import React from 'react';\n import { CardBody,Card,ButtonGroup, Button,ButtonToolbar,Overlay  } from 'reactstrap';\n import React, { useEffect, useState } from \"react\";\n \n import {Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer,LayerGroup} from 'react-leaflet';\nimport service from './services';\nimport Map1 from './Map1';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst FloorMap  = () => {\n  \n    \n\n    const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n\n\n\n     const refno=window.location.pathname.replace('/FloorMap/','');\n      \n     const handleClick = (e) => {\n       console.log(e.target.value)\n      debugger;\n    }\n      \n      \n\n      \n     \n \n     \n\n   \n  return (\n\n    <Card >\n    <CardBody>\n\n<div>\n\n{/* <div> <Link to=\"/Map1\" className=\"btn btn-primary\"><p class=\"ri-home-4-line\"> Home </p></Link></div> */}\n\n\n\n\n\n                        {markers.filter(item => item.id===refno).map(filteredName => (\n                            <div>\n                              \n                             {/* <h1 className=\"display-7\">#{filteredName.id}-{filteredName.description}</h1> */}\n                             <h1 className=\"display-9\">{filteredName.street}   {filteredName.Apartment} {filteredName.doornum} {filteredName.region} {filteredName.country}</h1>\n                             <ButtonToolbar className=\"mt-3\">\n                             <ButtonGroup className=\"mr-2\">\n                                 {filteredName.floors.map((item2, index) => (\n                                       \n                                      <Button color=\"secondary\" data-key={index}\n                                      \n                                      onClick={handleClick}> {item2.description}</Button>\n\n  \n                                   ))}\n                                   </ButtonGroup></ButtonToolbar>\n                             </div>\n\n\n\n\n                        ))}\n                        \n                        \n                        </div>\n                        <div>\n                        {markers.filter(item => item.id===refno).map(filteredName => (\n                            <div>\n                         <MapContainer\n                                    style={ { height: \"500px\", width: \"100%\"}}\n                                    \n                                    center={[filteredName.latitude, filteredName.longitude]} zoom={18} maxZoom={100}\n                                    \n                                >\n\n                                        <TileLayer\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                    />\n                                    {filteredName.floors.map((floor, index) => (\n                            //           <Polygon positions={floor.boundaries} color={floor.color}\n                            //  /> \n                            <Overlay name={floor.description} id={floor.floorno}>\n                            <LayerGroup>\n                            <Polygon positions={floor.boundaries} color={floor.color}\n                              /> \n                            </LayerGroup>\n                          </Overlay>\n\n                                    ))}\n\n                             \n\n                             </MapContainer> \n                             </div>\n                        ))\n                        }\n                        </div>\n    </CardBody>\n    </Card>  \n\n  );\n}\n\nexport default FloorMap;\n"]},"metadata":{},"sourceType":"module"}