{"ast":null,"code":"import _classCallCheck from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n//import React from 'react';\n//import { LayersControl as BaseLayersControl } from 'react-leaflet';\nimport { CardBody, Card, ButtonGroup, Button, ButtonToolbar, Form, FormGroup, Label, Input } from 'reactstrap';\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport { Polygon, Popup, Rectangle, Marker, TileLayer, MapContainer, LayersControl, LayerGroup, useMapEvents } from 'react-leaflet';\nimport service from './services';\nimport { Link } from \"react-router-dom\";\n\nvar EditFloorMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditFloorMap, _React$Component);\n\n  var _super = _createSuper(EditFloorMap);\n\n  function EditFloorMap() {\n    var _this;\n\n    _classCallCheck(this, EditFloorMap);\n\n    _this = _super.call(this);\n    _this.state = {\n      markers: []\n    };\n    debugger;\n\n    var that = _assertThisInitialized(_this);\n\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      that.setState({\n        'markers': latlng\n      });\n    });\n    return _this;\n  }\n\n  _createClass(EditFloorMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"LocationMarker\",\n    value: function LocationMarker(context1) {\n      var main = context1;\n      this.setState({\n        position: null\n      }); //const [position, setPosition] = useState(null)\n\n      var that = this;\n      var map = useMapEvents({\n        click() {\n          debugger;\n        },\n\n        locationfound(e) {}\n\n      });\n      return position === null ? null : /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"You are here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.markers.filter(function (item) {\n          return item.id === \"3\";\n        }).map(function (filteredName) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-4\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"exampleInputReadonly\",\n                    children: \"Building Id\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 47\n                  }, _this2), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"exampleInputReadonly\",\n                    readOnly: \"\",\n                    defaultValue: filteredName.id,\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 47\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 47\n                }, _this2), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"exampleInputReadonly\",\n                    children: \"Building Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 47\n                  }, _this2), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"exampleInputReadonly\",\n                    readOnly: \"\",\n                    defaultValue: filteredName.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 47\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 47\n                }, _this2), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"exampleInputReadonly\",\n                    children: \"Street\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 47\n                  }, _this2), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"exampleInputReadonly\",\n                    readOnly: \"\",\n                    defaultValue: filteredName.street\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 47\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 47\n                }, _this2), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"exampleInputReadonly\",\n                    children: \"Apartment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 47\n                  }, _this2), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"exampleInputReadonly\",\n                    readOnly: \"\",\n                    defaultValue: filteredName.Apartment\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 47\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 47\n                }, _this2), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"exampleInputReadonly\",\n                    children: \"Doornum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 47\n                  }, _this2), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"exampleInputReadonly\",\n                    readOnly: \"\",\n                    defaultValue: filteredName.doornum\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 47\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 47\n                }, _this2), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"exampleInputReadonly\",\n                    children: \"Region\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 47\n                  }, _this2), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"exampleInputReadonly\",\n                    readOnly: \"\",\n                    defaultValue: filteredName.region\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 47\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 47\n                }, _this2), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"exampleInputReadonly\",\n                    children: \"Country\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 47\n                  }, _this2), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"exampleInputReadonly\",\n                    readOnly: \"\",\n                    defaultValue: filteredName.country\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 47\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 47\n                }, _this2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 1\n              }, _this2), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-8\",\n                children: /*#__PURE__*/_jsxDEV(MapContainer, {\n                  style: {\n                    height: \"700px\",\n                    width: \"100%\"\n                  },\n                  center: [filteredName.latitude, filteredName.longitude],\n                  zoom: 17,\n                  maxZoom: 100,\n                  children: [/*#__PURE__*/_jsxDEV(LayersControl, {\n                    position: \"topright\",\n                    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n                      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 57\n                    }, _this2), /*#__PURE__*/_jsxDEV(LayersControl.BaseLayer, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 57\n                    }, _this2), filteredName.floors.map(function (floor, index) {\n                      return /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n                        checked: true,\n                        name: floor.description,\n                        children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n                          children: [floor.boundaries.map(function (vertex, index) {\n                            return /*#__PURE__*/_jsxDEV(Marker, {\n                              position: vertex,\n                              children: /*#__PURE__*/_jsxDEV(Popup, {\n                                children: [\"delete\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 143,\n                                  columnNumber: 89\n                                }, _this2)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 142,\n                                columnNumber: 83\n                              }, _this2)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 141,\n                              columnNumber: 83\n                            }, _this2);\n                          }), /*#__PURE__*/_jsxDEV(Polygon, {\n                            positions: floor.boundaries,\n                            color: floor.color\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 149,\n                            columnNumber: 78\n                          }, _this2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 75\n                        }, _this2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 75\n                      }, _this2);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 61\n                  }, _this2), /*#__PURE__*/_jsxDEV(LocationMarker, {\n                    context1: _this2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 55\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 47\n                }, _this2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 47\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 47\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 45\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 3\n      }, this);\n    }\n  }]);\n\n  return EditFloorMap;\n}(React.Component);\n\nexport default EditFloorMap;","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/EditFloormap.js"],"names":["CardBody","Card","ButtonGroup","Button","ButtonToolbar","Form","FormGroup","Label","Input","React","useEffect","useState","Col","Row","Polygon","Popup","Rectangle","Marker","TileLayer","MapContainer","LayersControl","LayerGroup","useMapEvents","service","Link","EditFloorMap","state","markers","that","getAll","then","latlng","console","log","setState","context1","main","position","map","click","locationfound","e","filter","item","id","filteredName","description","street","Apartment","doornum","region","country","height","width","latitude","longitude","floors","floor","index","boundaries","vertex","color","Component"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n //import React from 'react';\n //import { LayersControl as BaseLayersControl } from 'react-leaflet';\n import { CardBody,Card,ButtonGroup, Button,ButtonToolbar,Form,FormGroup,Label,Input } from 'reactstrap';\n import React, { useEffect, useState } from \"react\";\n import { Col, Row } from \"reactstrap\";\n\n import {Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer,LayersControl, LayerGroup,useMapEvents} from 'react-leaflet';\nimport service from './services';\n\nimport { Link } from \"react-router-dom\";\n\n\n\n\nclass EditFloorMap extends React.Component{\n\n  constructor() {\n    super();\n    this.state = {\n       markers:[]\n    };\n    debugger;\n    var that=this;\n    service.getAll().then(latlng =>{\n                           console.log(\"returning\", latlng)\n                          that.setState({ 'markers': latlng })\n                          \n                         });\n}\ncomponentDidMount() {\n  \n  \n  }\n LocationMarker(context1) {\n \n    const main = context1;\n  this.setState({position: null})\n   //const [position, setPosition] = useState(null)\n    var that=this;\n    const map = useMapEvents({\n      click() {\n        debugger;\n      },\n      locationfound(e) {\n       \n      },\n    })\n  \n    return position === null ? null : (\n      <Marker position={position}>\n        <Popup>You are here</Popup>\n      </Marker>\n    )\n\n}\n \nrender(){\n\n  return ( \n    \n  <div>\n    \n                  {this.state.markers.filter(item => item.id===\"3\").map(filteredName => (\n                                            <div>\n                                              <Row className=\"row\">\n<Col className=\"col-4\">\n                                              \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Id</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.id} disabled/>\n                                              </FormGroup>\n                                             \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Building Name</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.description} />\n                                              </FormGroup>\n                                            \n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Street</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.street} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Apartment</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.Apartment} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Doornum</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.doornum} />\n                                              </FormGroup>\n\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Region</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.region} />\n                                              </FormGroup>\n\n                                              <FormGroup className=\"form-group\">\n                                              <Label htmlFor=\"exampleInputReadonly\">Country</Label>\n                                              <Input type=\"text\" className=\"form-control\" id=\"exampleInputReadonly\"\n                                              readOnly=\"\" defaultValue={filteredName.country} />\n                                              </FormGroup>\n\n                                              </Col>\n                                              <Col className=\"col-8\">\n\n                                              <MapContainer  \n                                                style={ { height: \"700px\", width: \"100%\"}}\n                                    \n                                                   center={[filteredName.latitude, filteredName.longitude]} zoom={17} maxZoom={100}\n                                    \n                                                   >\n                                  \n                                                            <LayersControl position=\"topright\">\n                                                        \n                                                        <TileLayer\n                                                          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                                          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                                        />\n\n                                                        <LayersControl.BaseLayer >\n                                                            </LayersControl.BaseLayer>   \n                                                        \n                                                              \n                                                                \n                                                           { filteredName.floors.map((floor, index) => (\n                                                                            \n                                                                          <LayersControl.Overlay checked name={floor.description}>\n                                                                          <LayerGroup>\n                                                                            {floor.boundaries.map((vertex,index) => (\n\n                                                                                  <Marker position={vertex} >\n                                                                                  <Popup>\n                                                                                  delete<br />\n                                                                                  </Popup>\n                                                                                  </Marker>\n                                                                            ))\n\n                                                                            }\n                                                                            {<Polygon positions={floor.boundaries} color={floor.color}/> }\n                                                                          </LayerGroup>\n                                                                          </LayersControl.Overlay>\n                                                                        \n                                                                        ))\n                                                         \n                                                                      }\n\n                                                      </LayersControl>  \n                                                      <LocationMarker context1={this}></LocationMarker>\n                             </MapContainer>     \n                             </Col>\n                             </Row>\n\n\n\n\n\n                                      </div>\n  \n                  ))}\n                   \n                   </div>)\n}\n\n}\nexport default EditFloorMap;"]},"metadata":{},"sourceType":"module"}