{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n//import React from 'react';\nimport { CardBody, Card } from 'reactstrap';\nimport React, { useEffect, useState } from \"react\";\nimport { Polygon, Popup, Rectangle, Marker, TileLayer, MapContainer } from 'react-leaflet';\nimport service from './services';\n\nvar FloorMap = function FloorMap() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  useEffect(function () {\n    service.getAll().then(function (latlng) {\n      console.log(\"returning\", latlng);\n      setMarkers(latlng);\n    });\n  }, []);\n  var refno = window.location.pathname.replace('/FloorMap/', '');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: markers.filter(function (item) {\n          return item.id === refno;\n        }).map(function (filteredName) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-7\",\n              children: [\"#\", filteredName.id, \"-\", filteredName.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 30\n            }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-9\",\n              children: [filteredName.street, \"   \", filteredName.Apartment, \" \", filteredName.doornum, \" \", filteredName.region, \" \", filteredName.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 30\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: markers.filter(function (item) {\n          return item.id === refno;\n        }).map(function (filteredName) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              style: {\n                height: \"500px\",\n                width: \"100%\"\n              },\n              center: [filteredName.latitude, filteredName.longitude],\n              zoom: 18,\n              maxZoom: 100,\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(Polygon, {\n                positions: filteredName.boundaries,\n                color: \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FloorMap, \"aVe0o7Xd1RI2qqyy9XuFimi/3oU=\");\n\n_c = FloorMap;\nexport default FloorMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"FloorMap\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/FloorMap.js"],"names":["CardBody","Card","React","useEffect","useState","Polygon","Popup","Rectangle","Marker","TileLayer","MapContainer","service","FloorMap","markers","setMarkers","getAll","then","latlng","console","log","refno","window","location","pathname","replace","filter","item","id","map","filteredName","description","street","Apartment","doornum","region","country","height","width","latitude","longitude","boundaries"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n //import React from 'react';\n import { CardBody,Card } from 'reactstrap';\n import React, { useEffect, useState } from \"react\";\n \n import {Polygon, Popup, Rectangle, Marker, TileLayer , MapContainer} from 'react-leaflet';\nimport service from './services';\n\n\nconst FloorMap  = () => {\n  \n    \n\n    const [markers, setMarkers] = useState([])\n   \n\n      useEffect(()=>{\n        service\n        .getAll()\n        .then(latlng =>{\n          console.log(\"returning\", latlng)\n          setMarkers(latlng)\n        })\n      },[])\n\n\n\n     const refno=window.location.pathname.replace('/FloorMap/','');\n      \n\n      \n      \n\n      \n     \n \n     \n\n   \n  return (\n\n    <Card >\n    <CardBody>\n\n\n\n\n\n                    <div>\n                        {markers.filter(item => item.id===refno).map(filteredName => (\n                            <div>\n                              \n                             <h1 className=\"display-7\">#{filteredName.id}-{filteredName.description}</h1>\n                             <h1 className=\"display-9\">{filteredName.street}   {filteredName.Apartment} {filteredName.doornum} {filteredName.region} {filteredName.country}</h1>\n                             </div>\n\n\n\n\n                        ))}\n                        </div>\n                        <div>\n                        {markers.filter(item => item.id===refno).map(filteredName => (\n                            <div>\n                        <MapContainer\n                                    style={ { height: \"500px\", width: \"100%\"}}\n                                    \n                                    center={[filteredName.latitude, filteredName.longitude]} zoom={18} maxZoom={100}\n                                    \n                                >\n\n                                        <TileLayer\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                    />\n\n                            <Polygon positions={filteredName.boundaries} color='red'\n                             />\n\n\n                             </MapContainer>\n                             </div>\n                        ))\n                        }\n                        </div>\n    </CardBody>\n    </Card>  \n\n  );\n}\n\nexport default FloorMap;\n"]},"metadata":{},"sourceType":"module"}