{"ast":null,"code":"import _slicedToArray from \"/Users/likhitha/Documents/cms/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/*import React from \"react\"\n\nconst DisplayEntry = ({ name }) => {\n    return(\n        <div>\n            {name} \n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries*/\nimport React, { useState, useEffect } from \"react\";\nimport service from \"./services.js\";\nimport { Row, Col } from 'reactstrap';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nvar DisplayEntry = function DisplayEntry(_ref) {\n  _s();\n\n  var lat = _ref.lat,\n      lng = _ref.lng,\n      name = _ref.name,\n      id = _ref.id;\n\n  var _useState = useState(name),\n      _useState2 = _slicedToArray(_useState, 2),\n      newName = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(lat),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newLat = _useState4[0],\n      setLat = _useState4[1];\n\n  var _useState5 = useState(lng),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newLng = _useState6[0],\n      setLng = _useState6[1]; //  const [ newNumber, setNumber ] = useState(number)\n\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      buttonVal = _useState8[0],\n      setButtonVal = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      gridApi = _useState10[0],\n      setGridApi = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gridColumnApi = _useState12[0],\n      setGridColumnApi = _useState12[1];\n\n  var _useState13 = useState([{\n    newName\n  }, {\n    newLat\n  }, {\n    newLng\n  }]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      rowData = _useState14[0],\n      setRowData = _useState14[1];\n\n  var deleteHandler = function deleteHandler(id) {\n    var handler = function handler() {\n      if (window.confirm(\"Do you reall want to delete \".concat(name, \"'s number?\"))) {\n        service.deletion(id).then(function (response) {\n          setName(\"\");\n          setLat(\"\");\n          setLng(\"\");\n          setButtonVal(\"\");\n        });\n      }\n    };\n\n    return handler;\n  };\n\n  useEffect(function () {\n    setButtonVal( /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteHandler(id),\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }, _this));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 400,\n      width: 600\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"lng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"lat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DisplayEntry, \"amLcChiHd/u4ZdGC4y8bZj5Vjbo=\");\n\n_c = DisplayEntry;\n\nvar DisplayEntries = function DisplayEntries(_ref2) {\n  var names = _ref2.names,\n      regVal = _ref2.regVal;\n  var regExp = new RegExp(regVal, \"i\");\n  var filteredArray = names.filter(function (entry) {\n    return regExp.test(entry.name);\n  });\n  var namesArray = filteredArray.map(function (entry) {\n    return /*#__PURE__*/_jsxDEV(DisplayEntry, {\n      name: entry.name,\n      lat: entry.lat,\n      lng: entry.lng,\n      id: entry.id\n    }, entry.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 53\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: namesArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, _this);\n};\n\n_c2 = DisplayEntries;\nexport default DisplayEntries;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplayEntry\");\n$RefreshReg$(_c2, \"DisplayEntries\");","map":{"version":3,"sources":["/Users/likhitha/Documents/cms/client/src/components/dashboard/DisplayEntries.js"],"names":["React","useState","useEffect","service","Row","Col","AgGridColumn","AgGridReact","DisplayEntry","lat","lng","name","id","newName","setName","newLat","setLat","newLng","setLng","buttonVal","setButtonVal","gridApi","setGridApi","gridColumnApi","setGridColumnApi","rowData","setRowData","deleteHandler","handler","window","confirm","deletion","then","response","height","width","DisplayEntries","names","regVal","regExp","RegExp","filteredArray","filter","entry","test","namesArray","map"],"mappings":"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","sourcesContent":["/*import React from \"react\"\n\nconst DisplayEntry = ({ name }) => {\n    return(\n        <div>\n            {name} \n        </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} />)\n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries*/\n\nimport React, {useState, useEffect} from \"react\"\nimport service from \"./services.js\"\nimport {Row, Col} from 'reactstrap';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nconst DisplayEntry = ({ lat, lng, name, id }) => {\n    const [ newName, setName ] = useState(name)\n    const [ newLat, setLat] = useState(lat)\n    const [ newLng, setLng] = useState(lng)\n  //  const [ newNumber, setNumber ] = useState(number)\n    const [ buttonVal, setButtonVal ] = useState(\"\")\n    const [gridApi, setGridApi] = useState(null);\n    const [gridColumnApi, setGridColumnApi] = useState(null);\n    const [rowData, setRowData] = useState([\n        {newName}, {newLat},  {newLng}\n        \n    ]);\n\n    const deleteHandler = (id) =>{\n        const handler = () =>{\n            if(window.confirm(`Do you reall want to delete ${name}\\'s number?`)){\n                service.deletion(id)\n                .then(response => {\n                    \n                    setName(\"\")\n                    setLat(\"\")\n                    setLng(\"\")\n                    \n                    setButtonVal(\"\")\n                })\n            }\n        }\n        return handler\n    }\n\n    useEffect(()=>{\n        setButtonVal(<button onClick={deleteHandler(id)}>delete</button>)\n    },\n    [])\n\n    return(\n        <div className=\"ag-theme-alpine\" style={ { height: 400, width: 600 } }>\n            <AgGridReact\n                rowData={rowData}>\n                <AgGridColumn field=\"name\"></AgGridColumn>\n                <AgGridColumn field=\"lng\"></AgGridColumn>\n                <AgGridColumn field=\"lat\"></AgGridColumn>\n            </AgGridReact>\n        \n        \n            {/* <Row>\n                <Col sm={3}>\n            {newName} </Col>\n            <Col sm={3} >{newLat}  </Col>\n            <Col sm={3}> {newLng} </Col>\n            <Col sm={3}> {buttonVal}</Col>\n            </Row> */}\n            </div>\n    )\n}\n\nconst DisplayEntries = ({ names, regVal }) => {\n    const regExp = new RegExp(regVal, \"i\")\n    const filteredArray = names.filter((entry) => regExp.test(entry.name))\n    const namesArray = filteredArray.map((entry) => <DisplayEntry key={entry.id} name={entry.name} lat={entry.lat} lng={entry.lng} id={entry.id} />)\n    \n    return(\n    <div>\n        {namesArray}\n    </div>\n    )\n}\n\nexport default DisplayEntries"]},"metadata":{},"sourceType":"module"}